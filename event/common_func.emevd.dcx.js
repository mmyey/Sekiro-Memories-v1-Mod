// ==EMEVD==
// @docs    sekiro-common.emedf.json
// @compress    DCX_KRAK
// @game    Sekiro
// @string    
// @linked    []
// @version    3.2.2
// ==/EMEVD==

Event(20004000, Default, function() {
    SetNetworkSyncState(Disabled);
    ClearSpEffect(10000, 109203);
    IfCharacterHasSpEffect(AND01, 10000, 4200, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND01, 10000, 109012, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    SetSpEffect(10000, 109203);
    IfCharacterHasSpEffect(AND02, 10000, 4200, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, 10000, 109012, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, FAIL, AND02);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004001, Default, function(X0_4) {
    SetNetworkSyncState(Disabled);
    ClearSpEffect(10000, 100210);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X0_4, 1);
    SetSpEffect(10000, 100210);
    IfInoutsideArea(MAIN, InsideOutsideState.Outside, 10000, X0_4, 1);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004002, Default, function(X0_4) {
    SetNetworkSyncState(Disabled);
    ClearSpEffect(10000, 100211);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X0_4, 1);
    SetSpEffect(10000, 100211);
    IfInoutsideArea(MAIN, InsideOutsideState.Outside, 10000, X0_4, 1);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004010, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4) {
    SetNetworkSyncState(Disabled);
    IfParameterComparison(AND06, ComparisonType.Greater, X0_4, 1000000);
    IfParameterComparison(AND06, ComparisonType.Less, X0_4, 1100000);
    IfPlayerInoutMap(AND06, false, 10, 0);
    IfConditionGroup(OR01, PASS, AND06);
    IfParameterComparison(AND07, ComparisonType.Greater, X0_4, 1100000);
    IfParameterComparison(AND07, ComparisonType.Less, X0_4, 1110000);
    IfPlayerInoutMap(AND07, false, 11, 0);
    IfConditionGroup(OR01, PASS, AND07);
    IfParameterComparison(AND08, ComparisonType.Greater, X0_4, 1300000);
    IfParameterComparison(AND08, ComparisonType.Less, X0_4, 1400000);
    IfPlayerInoutMap(AND08, false, 13, 0);
    IfConditionGroup(OR01, PASS, AND08);
    IfParameterComparison(AND09, ComparisonType.Greater, X0_4, 1500000);
    IfParameterComparison(AND09, ComparisonType.Less, X0_4, 1600000);
    IfPlayerInoutMap(AND09, false, 15, 0);
    IfConditionGroup(OR01, PASS, AND09);
    IfParameterComparison(AND10, ComparisonType.Greater, X0_4, 1700000);
    IfParameterComparison(AND10, ComparisonType.Less, X0_4, 1800000);
    IfPlayerInoutMap(AND10, false, 17, 0);
    IfConditionGroup(OR01, PASS, AND10);
    IfParameterComparison(AND11, ComparisonType.Greater, X0_4, 2000000);
    IfParameterComparison(AND11, ComparisonType.Less, X0_4, 2100000);
    IfPlayerInoutMap(AND11, false, 20, 0);
    IfConditionGroup(OR01, PASS, AND11);
    IfParameterComparison(AND12, ComparisonType.Greater, X0_4, 2500000);
    IfParameterComparison(AND12, ComparisonType.Less, X0_4, 2600000);
    IfPlayerInoutMap(AND12, false, 25, 0);
    IfConditionGroup(OR01, PASS, AND12);
    IfParameterComparison(AND13, ComparisonType.Greater, X0_4, 1110000);
    IfParameterComparison(AND13, ComparisonType.Less, X0_4, 1120000);
    IfPlayerInoutMap(AND13, false, 11, 1);
    IfConditionGroup(OR01, PASS, AND13);
    IfParameterComparison(AND14, ComparisonType.Greater, X0_4, 1120000);
    IfParameterComparison(AND14, ComparisonType.Less, X0_4, 1130000);
    IfPlayerInoutMap(AND14, false, 11, 2);
    IfConditionGroup(OR01, PASS, AND14);
    GotoIfConditionGroupStateUncompiled(Label.LABEL1, PASS, OR01);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X0_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X4_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X8_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X12_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X16_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X20_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X24_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X28_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X32_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X36_4, 1);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, 9100);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, OR02);
    SetEventFlag(9100, ON);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X0_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X4_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X8_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X12_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X16_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X20_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X24_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X28_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X32_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfInoutsideArea(OR03, InsideOutsideState.Inside, 10000, X36_4, 1);
    IfConditionGroup(MAIN, PASS, OR03);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    SetEventFlag(9100, OFF);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X0_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X4_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X8_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X12_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X16_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X20_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X24_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X28_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X32_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfInoutsideArea(AND04, InsideOutsideState.Outside, 10000, X36_4, 1);
    IfConditionGroup(MAIN, PASS, AND04);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
    Label1();
    SkipIfConditionGroupStateCompiled(1, FAIL, AND06);
    IfPlayerInoutMap(OR05, true, 10, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND07);
    IfPlayerInoutMap(OR05, true, 11, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND08);
    IfPlayerInoutMap(OR05, true, 13, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND09);
    IfPlayerInoutMap(OR05, true, 15, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND10);
    IfPlayerInoutMap(OR05, true, 17, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND11);
    IfPlayerInoutMap(OR05, true, 20, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND12);
    IfPlayerInoutMap(OR05, true, 25, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND13);
    IfPlayerInoutMap(OR05, true, 11, 1);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND14);
    IfPlayerInoutMap(OR05, true, 11, 2);
    IfConditionGroup(MAIN, PASS, OR05);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004011, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4, X44_4, X48_4, X52_4, X56_4) {
    SetNetworkSyncState(Disabled);
    IfParameterComparison(AND06, ComparisonType.Greater, X0_4, 1000000);
    IfParameterComparison(AND06, ComparisonType.Less, X0_4, 1100000);
    IfPlayerInoutMap(AND06, false, 10, 0);
    IfConditionGroup(OR03, PASS, AND06);
    IfParameterComparison(AND07, ComparisonType.Greater, X0_4, 1100000);
    IfParameterComparison(AND07, ComparisonType.Less, X0_4, 1110000);
    IfPlayerInoutMap(AND07, false, 11, 0);
    IfConditionGroup(OR03, PASS, AND07);
    IfParameterComparison(AND08, ComparisonType.Greater, X0_4, 1300000);
    IfParameterComparison(AND08, ComparisonType.Less, X0_4, 1400000);
    IfPlayerInoutMap(AND08, false, 13, 0);
    IfConditionGroup(OR03, PASS, AND08);
    IfParameterComparison(AND09, ComparisonType.Greater, X0_4, 1500000);
    IfParameterComparison(AND09, ComparisonType.Less, X0_4, 1600000);
    IfPlayerInoutMap(AND09, false, 15, 0);
    IfConditionGroup(OR03, PASS, AND09);
    IfParameterComparison(AND10, ComparisonType.Greater, X0_4, 1700000);
    IfParameterComparison(AND10, ComparisonType.Less, X0_4, 1800000);
    IfPlayerInoutMap(AND10, false, 17, 0);
    IfConditionGroup(OR03, PASS, AND10);
    IfParameterComparison(AND11, ComparisonType.Greater, X0_4, 2000000);
    IfParameterComparison(AND11, ComparisonType.Less, X0_4, 2100000);
    IfPlayerInoutMap(AND11, false, 20, 0);
    IfConditionGroup(OR03, PASS, AND11);
    IfParameterComparison(AND12, ComparisonType.Greater, X0_4, 2500000);
    IfParameterComparison(AND12, ComparisonType.Less, X0_4, 2600000);
    IfPlayerInoutMap(AND12, false, 25, 0);
    IfConditionGroup(OR03, PASS, AND12);
    IfParameterComparison(AND13, ComparisonType.Greater, X0_4, 1110000);
    IfParameterComparison(AND13, ComparisonType.Less, X0_4, 1120000);
    IfPlayerInoutMap(AND13, false, 11, 1);
    IfConditionGroup(OR03, PASS, AND13);
    IfParameterComparison(AND14, ComparisonType.Greater, X0_4, 1120000);
    IfParameterComparison(AND14, ComparisonType.Less, X0_4, 1130000);
    IfPlayerInoutMap(AND14, false, 11, 2);
    IfConditionGroup(OR03, PASS, AND14);
    GotoIfConditionGroupStateUncompiled(Label.LABEL1, PASS, OR03);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X0_4, 0);
    IfInoutsideArea(OR01, InsideOutsideState.Inside, 10000, X0_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, 0);
    IfPlayerStandingOnHit(OR01, X4_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    IfPlayerStandingOnHit(OR01, X8_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, 0);
    IfPlayerStandingOnHit(OR01, X12_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    IfPlayerStandingOnHit(OR01, X16_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    IfPlayerStandingOnHit(OR01, X20_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfPlayerStandingOnHit(OR01, X24_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfPlayerStandingOnHit(OR01, X28_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfPlayerStandingOnHit(OR01, X32_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfPlayerStandingOnHit(OR01, X36_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    IfPlayerStandingOnHit(OR01, X40_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X44_4, 0);
    IfPlayerStandingOnHit(OR01, X44_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X48_4, 0);
    IfPlayerStandingOnHit(OR01, X48_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X52_4, 0);
    IfPlayerStandingOnHit(OR01, X52_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X56_4, 0);
    IfPlayerStandingOnHit(OR01, X56_4);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, OR01);
    SetEventFlag(9209, OFF);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X0_4, 0);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X0_4, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, 0);
    IfPlayerStandingOnHit(OR02, X4_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    IfPlayerStandingOnHit(OR02, X8_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, 0);
    IfPlayerStandingOnHit(OR02, X12_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    IfPlayerStandingOnHit(OR02, X16_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    IfPlayerStandingOnHit(OR02, X20_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfPlayerStandingOnHit(OR02, X24_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfPlayerStandingOnHit(OR02, X28_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfPlayerStandingOnHit(OR02, X32_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfPlayerStandingOnHit(OR02, X36_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    IfPlayerStandingOnHit(OR02, X40_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X44_4, 0);
    IfPlayerStandingOnHit(OR02, X44_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X48_4, 0);
    IfPlayerStandingOnHit(OR02, X48_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X52_4, 0);
    IfPlayerStandingOnHit(OR02, X52_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X56_4, 0);
    IfPlayerStandingOnHit(OR02, X56_4);
    IfConditionGroup(MAIN, PASS, OR02);
    WaitFixedTimeSeconds(5);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    SetEventFlag(9209, ON);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X0_4, 0);
    IfInoutsideArea(AND01, InsideOutsideState.Outside, 10000, X0_4, 1);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X4_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X8_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X12_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X16_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X20_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X24_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X32_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X36_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X40_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X44_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X48_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X52_4, 0);
    IfParameterComparison(AND02, ComparisonType.LessOrEqual, X56_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL5, PASS, AND02);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, 0);
    IfPlayerStandingOnHit(OR03, X4_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    IfPlayerStandingOnHit(OR03, X8_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, 0);
    IfPlayerStandingOnHit(OR03, X12_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    IfPlayerStandingOnHit(OR03, X16_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    IfPlayerStandingOnHit(OR03, X20_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfPlayerStandingOnHit(OR03, X24_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfPlayerStandingOnHit(OR03, X28_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfPlayerStandingOnHit(OR03, X32_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfPlayerStandingOnHit(OR03, X36_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    IfPlayerStandingOnHit(OR03, X40_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X44_4, 0);
    IfPlayerStandingOnHit(OR03, X44_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X48_4, 0);
    IfPlayerStandingOnHit(OR03, X48_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X52_4, 0);
    IfPlayerStandingOnHit(OR03, X52_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X56_4, 0);
    IfPlayerStandingOnHit(OR03, X56_4);
    IfConditionGroup(AND01, FAIL, OR03);
    Label5();
    IfConditionGroup(MAIN, PASS, AND01);
    WaitFixedTimeSeconds(0.2);
    EndUnconditionally(EventEndType.Restart);
    Label1();
    SkipIfConditionGroupStateCompiled(1, FAIL, AND06);
    IfPlayerInoutMap(OR05, true, 10, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND07);
    IfPlayerInoutMap(OR05, true, 11, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND08);
    IfPlayerInoutMap(OR05, true, 13, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND09);
    IfPlayerInoutMap(OR05, true, 15, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND10);
    IfPlayerInoutMap(OR05, true, 17, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND11);
    IfPlayerInoutMap(OR05, true, 20, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND12);
    IfPlayerInoutMap(OR05, true, 25, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND13);
    IfPlayerInoutMap(OR05, true, 11, 1);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND14);
    IfPlayerInoutMap(OR05, true, 11, 2);
    IfConditionGroup(MAIN, PASS, OR05);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004100, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    ActivateMapPart(X0_4, Disabled);
    ActivateMapPart(X4_4, Disabled);
    ActivateMapPart(X8_4, Disabled);
    ActivateMapPart(X12_4, Disabled);
    ActivateMapPart(X16_4, Disabled);
    ActivateMapPart(X20_4, Disabled);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, 9810);
    GotoIfEventFlag(Label.LABEL5, ON, TargetEventFlagType.EventFlag, 9803);
    GotoIfEventFlag(Label.LABEL4, ON, TargetEventFlagType.EventFlag, 9802);
    GotoIfEventFlag(Label.LABEL3, ON, TargetEventFlagType.EventFlag, 9801);
    GotoIfEventFlag(Label.LABEL2, ON, TargetEventFlagType.EventFlag, 9800);
    ActivateMapPart(X4_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label2();
    ActivateMapPart(X8_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label3();
    ActivateMapPart(X12_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label4();
    ActivateMapPart(X16_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label5();
    ActivateMapPart(X20_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label0();
    ActivateMapPart(X0_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label9();
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9800);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9801);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9802);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9803);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9810);
    IfConditionGroup(MAIN, PASS, OR01);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004101, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    ChangeCharacterEnableState(X0_4, Disabled);
    SetCharacterAnimationState(X0_4, Disabled);
    SetCharacterBackreadState(X0_4, true);
    ChangeCharacterEnableState(X4_4, Disabled);
    SetCharacterAnimationState(X4_4, Disabled);
    SetCharacterBackreadState(X4_4, true);
    ChangeCharacterEnableState(X8_4, Disabled);
    SetCharacterAnimationState(X8_4, Disabled);
    SetCharacterBackreadState(X8_4, true);
    ChangeCharacterEnableState(X12_4, Disabled);
    SetCharacterAnimationState(X12_4, Disabled);
    SetCharacterBackreadState(X12_4, true);
    ChangeCharacterEnableState(X16_4, Disabled);
    SetCharacterAnimationState(X16_4, Disabled);
    SetCharacterBackreadState(X16_4, true);
    ChangeCharacterEnableState(X20_4, Disabled);
    SetCharacterAnimationState(X20_4, Disabled);
    SetCharacterBackreadState(X20_4, true);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, 9810);
    GotoIfEventFlag(Label.LABEL5, ON, TargetEventFlagType.EventFlag, 9803);
    GotoIfEventFlag(Label.LABEL4, ON, TargetEventFlagType.EventFlag, 9802);
    GotoIfEventFlag(Label.LABEL3, ON, TargetEventFlagType.EventFlag, 9801);
    GotoIfEventFlag(Label.LABEL2, ON, TargetEventFlagType.EventFlag, 9800);
    ChangeCharacterEnableState(X4_4, Enabled);
    SetCharacterAnimationState(X4_4, Enabled);
    SetCharacterBackreadState(X4_4, false);
    GotoUnconditionally(Label.LABEL9);
    Label2();
    ChangeCharacterEnableState(X8_4, Enabled);
    SetCharacterAnimationState(X8_4, Enabled);
    SetCharacterBackreadState(X8_4, false);
    GotoUnconditionally(Label.LABEL9);
    Label3();
    ChangeCharacterEnableState(X12_4, Enabled);
    SetCharacterAnimationState(X12_4, Enabled);
    SetCharacterBackreadState(X12_4, false);
    GotoUnconditionally(Label.LABEL9);
    Label4();
    ChangeCharacterEnableState(X16_4, Enabled);
    SetCharacterAnimationState(X16_4, Enabled);
    SetCharacterBackreadState(X16_4, false);
    GotoUnconditionally(Label.LABEL9);
    Label5();
    ChangeCharacterEnableState(X20_4, Enabled);
    SetCharacterAnimationState(X20_4, Enabled);
    SetCharacterBackreadState(X20_4, false);
    GotoUnconditionally(Label.LABEL9);
    Label0();
    ChangeCharacterEnableState(X0_4, Enabled);
    SetCharacterAnimationState(X0_4, Enabled);
    SetCharacterBackreadState(X0_4, false);
    GotoUnconditionally(Label.LABEL9);
    Label9();
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9800);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9801);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9802);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9803);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9810);
    IfConditionGroup(MAIN, PASS, OR01);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004102, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    DeactivateObject(X0_4, Disabled);
    DeactivateObject(X4_4, Disabled);
    DeactivateObject(X8_4, Disabled);
    DeactivateObject(X12_4, Disabled);
    DeactivateObject(X16_4, Disabled);
    DeactivateObject(X20_4, Disabled);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, 9810);
    GotoIfEventFlag(Label.LABEL5, ON, TargetEventFlagType.EventFlag, 9803);
    GotoIfEventFlag(Label.LABEL4, ON, TargetEventFlagType.EventFlag, 9802);
    GotoIfEventFlag(Label.LABEL3, ON, TargetEventFlagType.EventFlag, 9801);
    GotoIfEventFlag(Label.LABEL2, ON, TargetEventFlagType.EventFlag, 9800);
    DeactivateObject(X4_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label2();
    DeactivateObject(X8_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label3();
    DeactivateObject(X12_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label4();
    DeactivateObject(X16_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label5();
    DeactivateObject(X20_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label0();
    DeactivateObject(X0_4, Enabled);
    GotoUnconditionally(Label.LABEL9);
    Label9();
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9800);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9801);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9802);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9803);
    IfEventFlag(OR01, CHANGE, TargetEventFlagType.EventFlag, 9810);
    IfConditionGroup(MAIN, PASS, OR01);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004105, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    ChangeCharacterEnableState(X4_4, Disabled);
    SetCharacterAnimationState(X4_4, Disabled);
    SetCharacterBackreadState(X4_4, true);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X0_4, 0);
    EndIfEventFlag(EventEndType.End, OFF, TargetEventFlagType.EventFlag, 59);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 9801);
    IfConditionGroup(MAIN, PASS, AND01);
    ChangeCharacterEnableState(X4_4, Enabled);
    SetCharacterAnimationState(X4_4, Enabled);
    SetCharacterBackreadState(X4_4, false);
    ChangeCharacterEnableState(X12_4, Disabled);
    SetCharacterAnimationState(X12_4, Disabled);
    SetCharacterBackreadState(X12_4, true);
    IfEventFlag(OR01, OFF, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(OR01, OFF, TargetEventFlagType.EventFlag, 9801);
    IfConditionGroup(MAIN, PASS, OR01);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004106, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4) {
    SkipIfComparison(1, ComparisonType.LessOrEqual, X0_4, 0);
    EndIfEventFlag(EventEndType.End, OFF, TargetEventFlagType.EventFlag, 59);
    WaitFixedTimeFrames(1);
    SetSpEffect(X4_4, 220690);
    SetSpEffect(X4_4, 200600);
    ClearSpEffect(X4_4, 220695);
    SetCharacterInvincibility(X4_4, Enabled);
    SetCharacterAIState(X4_4, Disabled);
    SetCharacterAnimationState(X4_4, Disabled);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X8_4, 1);
    WaitRandomTimeSeconds(X12_4, X16_4);
    SetCharacterAIState(X4_4, Enabled);
    SetCharacterAnimationState(X4_4, Enabled);
    ClearSpEffect(X4_4, 220690);
    ClearSpEffect(X4_4, 200600);
    SetSpEffect(X4_4, 220695);
    SetCharacterInvincibility(X4_4, Disabled);
    EndUnconditionally(EventEndType.End);
});

Event(20004107, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    SkipIfComparison(1, ComparisonType.LessOrEqual, X0_4, 0);
    EndIfEventFlag(EventEndType.End, OFF, TargetEventFlagType.EventFlag, 59);
    WaitFixedTimeFrames(1);
    SetSpEffect(X4_4, 220690);
    SetSpEffect(X4_4, 200600);
    ClearSpEffect(X4_4, 220695);
    SetCharacterInvincibility(X4_4, Enabled);
    SetCharacterAIState(X4_4, Disabled);
    SetCharacterAnimationState(X4_4, Disabled);
    SkipIfComparison(1, ComparisonType.Less, X24_4, 0);
    SkipIfEventFlag(1, ON, TargetEventFlagType.EventFlag, X24_4);
    IfCharacterDrawgroupState(MAIN, X8_4, true, ComparisonType.Equal, X12_4);
    WaitRandomTimeSeconds(X16_4, X20_4);
    SetCharacterAIState(X4_4, Enabled);
    SetCharacterAnimationState(X4_4, Enabled);
    ClearSpEffect(X4_4, 220690);
    ClearSpEffect(X4_4, 200600);
    SetSpEffect(X4_4, 220695);
    SetCharacterInvincibility(X4_4, Disabled);
    EndUnconditionally(EventEndType.End);
});

Event(20004109, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    SkipIfComparison(1, ComparisonType.LessOrEqual, X0_4, 0);
    GotoIfEventFlag(Label.LABEL20, OFF, TargetEventFlagType.EventFlag, 59);
    GotoIfEventFlag(Label.LABEL20, OFF, TargetEventFlagType.EventFlag, 8408);
    IfCharacterDeadalive(AND01, X4_4, DeathState.Dead, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL20, PASS, AND01);
    WaitFixedTimeFrames(1);
    ForceAnimationPlayback(X4_4, 401, true, false, false, 0, 1);
    SetCharacterAIState(X4_4, Disabled);
    SetCharacterGravity(X4_4, Disabled);
    SetCharacterBackreadState(X4_4, true);
    DeleteMapSFX(X12_4, true);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    IfCharacterDrawgroupState(MAIN, X20_4, true, ComparisonType.Equal, X24_4);
    SpawnMapSFX(X12_4);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X8_4, 1);
    SetCharacterBackreadState(X4_4, false);
    SetCharacterGravity(X4_4, Enabled);
    ForceAnimationPlayback(X4_4, 20010, false, false, false, 0, 1);
    SetCharacterAIState(X4_4, Enabled);
    IfCharacterHasEventMessage(OR01, X4_4, 10, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR01);
    WaitFixedTimeFrames(3);
    ForceAnimationPlayback(X4_4, 401, false, false, false, 0, 1);
    SetCharacterAIState(X4_4, Disabled);
    ResetCharacterPosition(X4_4);
    SetCharacterGravity(X4_4, Disabled);
    EndUnconditionally(EventEndType.Restart);
    Label20();
    DeleteMapSFX(X12_4, false);
    EndUnconditionally(EventEndType.End);
});

Event(20004110, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_1, X21_1, X22_1, X23_1) {
    ActivateMapPart(X0_4, Disabled);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR01, X20_1, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR01, X21_1, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR01, X22_1, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR01, X23_1, TargetEventFlagType.EventFlag, X16_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, OR01);
    ActivateMapPart(X0_4, Enabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X16_4);
    IfConditionGroup(MAIN, PASS, OR15);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004111, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_1, X21_1, X22_1, X23_1) {
    ChangeCharacterEnableState(X0_4, Disabled);
    SetCharacterAnimationState(X0_4, Disabled);
    SetCharacterBackreadState(X0_4, true);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR01, X20_1, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR01, X21_1, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR01, X22_1, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR01, X23_1, TargetEventFlagType.EventFlag, X16_4);
    SkipIfConditionGroupStateUncompiled(3, PASS, OR01);
    ChangeCharacterEnableState(X0_4, Enabled);
    SetCharacterAnimationState(X0_4, Enabled);
    SetCharacterBackreadState(X0_4, false);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X16_4);
    IfConditionGroup(MAIN, PASS, OR15);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004112, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_1, X21_1, X22_1, X23_1) {
    DeactivateObject(X0_4, Disabled);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR01, X20_1, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR01, X21_1, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR01, X22_1, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR01, X23_1, TargetEventFlagType.EventFlag, X16_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, OR01);
    DeactivateObject(X0_4, Enabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X16_4);
    IfConditionGroup(MAIN, PASS, OR15);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004113, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_1, X21_1, X22_1, X23_1, X24_4) {
    SetObjectInteraction(X0_4, ObjectInteractionType.Grapple, Enabled);
    SetObjectInteraction(X0_4, X24_4, Disabled);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR01, X20_1, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR01, X21_1, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR01, X22_1, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR01, X23_1, TargetEventFlagType.EventFlag, X16_4);
    SkipIfConditionGroupStateUncompiled(2, PASS, OR01);
    SetObjectInteraction(X0_4, ObjectInteractionType.Grapple, Disabled);
    SetObjectInteraction(X0_4, X24_4, Enabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X16_4);
    IfConditionGroup(MAIN, PASS, OR15);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004114, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_1, X21_1, X22_1, X23_1) {
    ActivateHit(X0_4, Disabled);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR01, X20_1, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR01, X21_1, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR01, X22_1, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR01, X23_1, TargetEventFlagType.EventFlag, X16_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, OR01);
    ActivateHit(X0_4, Enabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X4_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X4_4);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X16_4);
    IfConditionGroup(MAIN, PASS, OR15);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004115, Default, function(X0_4, X4_4, X8_4) {
    SkipIfComparison(2, ComparisonType.LessOrEqual, X0_4, 0);
    ActivateHit(X0_4, Disabled);
    ActivateHitAndCreateNavimesh(X0_4, Disabled);
    ActivateHit(X4_4, Disabled);
    ActivateHitAndCreateNavimesh(X4_4, Disabled);
    WaitFixedTimeFrames(1);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X0_4, 0);
    ActivateHit(X0_4, Enabled);
    ActivateHitAndCreateNavimesh(X0_4, Enabled);
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X8_4);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    ActivateHit(X4_4, Enabled);
    ActivateHitAndCreateNavimesh(X4_4, Enabled);
    IfEventFlag(MAIN, OFF, TargetEventFlagType.EventFlag, X8_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004120, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    SkipIfComparison(1, ComparisonType.Less, X16_4, 0);
    SetObjectInteraction(X0_4, X16_4, Disabled);
    SkipIfComparison(1, ComparisonType.Less, X20_4, 0);
    SetObjectInteraction(X0_4, X20_4, Disabled);
    WaitFixedTimeFrames(1);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X12_4);
    ReproduceObjectAnimation(X0_4, X4_4);
    SkipIfComparison(1, ComparisonType.Less, X16_4, 0);
    SetObjectInteraction(X0_4, X16_4, Enabled);
    GotoUnconditionally(Label.LABEL1);
    Label0();
    ReproduceObjectAnimation(X0_4, X8_4);
    SkipIfComparison(1, ComparisonType.Less, X20_4, 0);
    SetObjectInteraction(X0_4, X20_4, Enabled);
    Label1();
    WaitFixedTimeFrames(1);
    DeactivateObject(X0_4, Disabled);
    WaitFixedTimeFrames(1);
    DeactivateObject(X0_4, Enabled);
    IfEventFlag(MAIN, CHANGE, TargetEventFlagType.EventFlag, X12_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20004150, Restart, function(X0_4, X4_4, X8_1, X9_1, X12_4) {
    IfCountEventFlags(AND01, TargetEventFlagType.EventFlag, 9303, 9306, ComparisonType.Equal, 0);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, 9800);
    IfCountEventFlags(AND02, TargetEventFlagType.EventFlag, 9303, 9306, ComparisonType.Equal, 2);
    IfEventFlag(AND02, OFF, TargetEventFlagType.EventFlag, 9801);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, X12_4);
    GotoIfConditionGroupStateUncompiled(Label.LABEL1, PASS, AND01);
    GotoIfConditionGroupStateUncompiled(Label.LABEL2, PASS, AND02);
    GotoIfConditionGroupStateUncompiled(Label.LABEL3, PASS, AND03);
    GotoUnconditionally(Label.LABEL20);
    Label1();
    PlayCutsceneAndWarpPlayerWithLighting200213(X0_4, CutscenePlayMode.Skippable, X4_4, X8_1, X9_1, 10000, TimeofDay.Noon, Enabled);
    SetEventFlag(X12_4, ON);
    GotoUnconditionally(Label.LABEL20);
    Label2();
    PlayCutsceneAndWarpPlayerWithLighting200213(X0_4, CutscenePlayMode.Skippable, X4_4, X8_1, X9_1, 10000, TimeofDay.Afternoon, Enabled);
    SetEventFlag(X12_4, ON);
    GotoUnconditionally(Label.LABEL20);
    Label3();
    PlayCutsceneAndWarpPlayer(X0_4, CutscenePlayMode.Skippable, X4_4, X8_1, X9_1, 10000);
    SetEventFlag(X12_4, ON);
    GotoUnconditionally(Label.LABEL20);
    Label20();
    EndUnconditionally(EventEndType.End);
});

Event(20004900, Default, function(X0_4, X4_4) {
    SetNetworkSyncState(Disabled);
    SetAreaCamerasetparamSubid(-1);
    WaitFixedTimeSeconds(0.5);
    IfInoutsideArea(OR01, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfConditionGroup(MAIN, PASS, OR01);
    SetAreaCamerasetparamSubid(X0_4);
    WaitFixedTimeSeconds(0.5);
    IfInoutsideArea(AND01, InsideOutsideState.Outside, 10000, X4_4, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005110, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetCharacterAIState(X0_4, Disabled);
    IfCharacterType(AND09, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND09, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND09);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 220018, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230110, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230111, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 9045, true, ComparisonType.Equal, 1);
    GotoIfComparison(Label.LABEL0, ComparisonType.Greater, X20_4, 0);
    IfCharacterHasSpEffect(OR05, X0_4, 230518, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230519, true, ComparisonType.Equal, 1);
    Label0();
    IfDamageType(OR05, X0_4, 10000, DamageType.Unspecified);
    IfConditionGroup(AND03, PASS, OR05);
    IfConditionGroup(OR02, PASS, AND03);
    IfConditionGroup(AND01, PASS, OR01);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfCharacterAIState(OR02, X16_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(OR02, PASS, AND01);
    IfConditionGroup(MAIN, PASS, OR02);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND03);
    IfCharacterDamagedBy(AND04, X0_4, 10000);
    IfConditionGroup(OR04, PASS, AND04);
    IfElapsedSeconds(OR04, X8_4);
    IfConditionGroup(MAIN, PASS, OR04);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND04);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, 0);
    ForceAnimationPlayback(X0_4, X12_4, false, false, true, 0, 1);
    Label1();
    SetCharacterAIState(X0_4, Enabled);
});

Event(20005120, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetCharacterAIState(X0_4, Disabled);
    IfCharacterType(AND09, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND09, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND09);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND01, InsideOutsideState.Inside, 10000, X0_4, X4_4, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 220018, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230110, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230111, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 9045, true, ComparisonType.Equal, 1);
    GotoIfComparison(Label.LABEL0, ComparisonType.Greater, X20_4, 0);
    IfCharacterHasSpEffect(OR05, X0_4, 230518, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230519, true, ComparisonType.Equal, 1);
    Label0();
    IfDamageType(OR05, X0_4, 10000, DamageType.Unspecified);
    IfConditionGroup(AND03, PASS, OR05);
    IfConditionGroup(OR02, PASS, AND03);
    IfConditionGroup(AND01, PASS, OR01);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfCharacterAIState(OR02, X16_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(OR02, PASS, AND01);
    IfConditionGroup(MAIN, PASS, OR02);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND03);
    IfCharacterDamagedBy(AND04, X0_4, 10000);
    IfConditionGroup(OR04, PASS, AND04);
    IfElapsedSeconds(OR04, X8_4);
    IfConditionGroup(MAIN, PASS, OR04);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND04);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, 0);
    ForceAnimationPlayback(X0_4, X12_4, false, false, true, 0, 1);
    Label1();
    SetCharacterAIState(X0_4, Enabled);
});

Event(20005130, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetCharacterAIState(X0_4, Disabled);
    IfCharacterType(AND09, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND09, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND09);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND01, InsideOutsideState.Inside, 10000, X0_4, X4_4, 1);
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X8_4, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 220018, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230110, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230111, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 9045, true, ComparisonType.Equal, 1);
    GotoIfComparison(Label.LABEL0, ComparisonType.Greater, X24_4, 0);
    IfCharacterHasSpEffect(OR05, X0_4, 230518, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230519, true, ComparisonType.Equal, 1);
    Label0();
    IfDamageType(OR05, X0_4, 10000, DamageType.Unspecified);
    IfConditionGroup(AND03, PASS, OR05);
    IfConditionGroup(OR02, PASS, AND03);
    IfConditionGroup(AND01, PASS, OR01);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfCharacterAIState(OR02, X20_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(OR02, PASS, AND01);
    IfConditionGroup(MAIN, PASS, OR02);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND03);
    IfCharacterDamagedBy(AND04, X0_4, 10000);
    IfConditionGroup(OR04, PASS, AND04);
    IfElapsedSeconds(OR04, X12_4);
    IfConditionGroup(MAIN, PASS, OR04);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND04);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    ForceAnimationPlayback(X0_4, X16_4, false, false, true, 0, 1);
    Label1();
    SetCharacterAIState(X0_4, Enabled);
});

Event(20005132, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetCharacterAIState(X0_4, Disabled);
    IfCharacterType(AND09, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND09, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND09);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(OR02, InsideOutsideState.Inside, 10000, X0_4, X4_4, 1);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X8_4, 1);
    IfConditionGroup(AND01, PASS, OR02);
    IfCharacterHasSpEffect(OR05, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 220018, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230110, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230111, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 9045, true, ComparisonType.Equal, 1);
    GotoIfComparison(Label.LABEL0, ComparisonType.Greater, X24_4, 0);
    IfCharacterHasSpEffect(OR05, X0_4, 230518, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230519, true, ComparisonType.Equal, 1);
    Label0();
    IfDamageType(OR05, X0_4, 10000, DamageType.Unspecified);
    IfConditionGroup(AND03, PASS, OR05);
    IfConditionGroup(OR03, PASS, AND03);
    IfConditionGroup(AND01, PASS, OR01);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfCharacterAIState(OR03, X20_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, AND01);
    IfConditionGroup(MAIN, PASS, OR03);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND03);
    IfCharacterDamagedBy(AND04, X0_4, 10000);
    IfConditionGroup(OR04, PASS, AND04);
    IfElapsedSeconds(OR04, X12_4);
    IfConditionGroup(MAIN, PASS, OR04);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND04);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    ForceAnimationPlayback(X0_4, X16_4, false, false, true, 0, 1);
    Label1();
    SetCharacterAIState(X0_4, Enabled);
});

Event(20005150, Restart, function(X0_4, X4_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetCharacterAIState(X0_4, Disabled);
    IfCharacterHasSpEffect(OR05, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 220018, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230110, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230111, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 9045, true, ComparisonType.Equal, 1);
    GotoIfComparison(Label.LABEL0, ComparisonType.Greater, X4_4, 0);
    IfCharacterHasSpEffect(OR05, X0_4, 230518, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230519, true, ComparisonType.Equal, 1);
    Label0();
    IfDamageType(OR01, X0_4, 10000, DamageType.Unspecified);
    IfConditionGroup(MAIN, PASS, OR01);
    SetCharacterAIState(X0_4, Enabled);
});

Event(20005151, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetCharacterAIState(X0_4, Disabled);
    IfCharacterHasSpEffect(OR05, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 220018, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230110, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230111, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 9045, true, ComparisonType.Equal, 1);
    GotoIfComparison(Label.LABEL0, ComparisonType.Greater, X12_4, 0);
    IfCharacterHasSpEffect(OR05, X0_4, 230518, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230519, true, ComparisonType.Equal, 1);
    Label0();
    IfDamageType(OR05, X0_4, 10000, DamageType.Unspecified);
    IfConditionGroup(AND03, PASS, OR05);
    IfConditionGroup(OR01, PASS, AND03);
    IfCharacterDeadalive(AND02, X4_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterAIState(OR02, X4_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR02, X4_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfCharacterAIState(OR02, X4_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR02);
    IfCharacterHasSpEffect(AND02, X4_4, 5450, false, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(MAIN, PASS, OR01);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND01);
    IfCharacterDamagedBy(AND04, X0_4, 10000);
    IfConditionGroup(OR04, PASS, AND04);
    IfElapsedSeconds(OR04, X8_4);
    IfConditionGroup(MAIN, PASS, OR04);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND04);
    SetCharacterAIState(X0_4, Enabled);
});

Event(20005200, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    ForceAnimationPlayback(X0_4, X4_4, true, false, false, 0, 1);
    IfCharacterType(AND10, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND10, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR10, PASS, AND09);
    IfCharacterType(OR10, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR10, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR10, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfInoutsideArea(AND09, InsideOutsideState.Inside, 10000, X12_4, 1);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X0_4, 5450, true, ComparisonType.Equal, 1);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X24_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X32_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL8, PASS, AND08);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, OR08);
    Label8();
    IfConditionGroup(AND09, PASS, OR10);
    IfConditionGroup(OR03, PASS, AND09);
    IfDamageType(OR02, X0_4, -1, DamageType.Unspecified);
    IfCharacterPostureRatio(OR02, X0_4, ComparisonType.Less, 1, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfCharacterHasSpEffect(OR03, X0_4, 9045, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 220018, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230110, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR05, X0_4, 230111, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfCharacterAIState(OR03, X36_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    IfCharacterAIState(OR04, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR04, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR04, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, OR02);
    SkipIfComparison(1, ComparisonType.Greater, X20_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL2, PASS, OR02);
    IfCharacterAIState(OR05, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfElapsedSeconds(OR05, X16_4);
    IfConditionGroup(MAIN, PASS, OR05);
    GotoIfComparison(Label.LABEL1, ComparisonType.Greater, X20_4, 0);
    GotoIfCharacterHasSpEffect(Label.LABEL2, X0_4, 5450, false, ComparisonType.Equal, 1);
    Label1();
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    Label2();
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Enabled);
    SetCharacterMaphit(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    ForceCharacterTarget(X0_4, 10000);
});

Event(20005210, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    ForceAnimationPlayback(X0_4, X4_4, true, false, false, 0, 1);
    IfCharacterType(AND10, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND10, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR10, PASS, AND10);
    IfCharacterType(OR10, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR10, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR10, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND09, InsideOutsideState.Inside, 10000, X0_4, X12_4, 1);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X0_4, 5450, true, ComparisonType.Equal, 1);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X24_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X32_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL8, PASS, AND08);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, OR08);
    Label8();
    IfConditionGroup(AND09, PASS, OR10);
    IfConditionGroup(OR03, PASS, AND09);
    IfDamageType(OR02, X0_4, -1, DamageType.Unspecified);
    IfCharacterPostureRatio(OR02, X0_4, ComparisonType.Less, 1, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfCharacterHasSpEffect(OR03, X0_4, 9045, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfCharacterAIState(OR03, X36_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, OR02);
    WaitFixedTimeSeconds(0.1);
    SkipIfCharacterHasSpEffect(1, X0_4, 5450, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateCompiled(Label.LABEL2, PASS, OR02);
    IfCharacterAIState(OR05, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfElapsedSeconds(OR05, X16_4);
    IfConditionGroup(MAIN, PASS, OR05);
    GotoIfComparison(Label.LABEL1, ComparisonType.Greater, X20_4, 0);
    GotoIfCharacterHasSpEffect(Label.LABEL2, X0_4, 5450, false, ComparisonType.Equal, 1);
    Label1();
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    Label2();
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Enabled);
    SetCharacterMaphit(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    ForceCharacterTarget(X0_4, 10000);
});

Event(20005212, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4, X44_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X24_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    ForceAnimationPlayback(X0_4, X4_4, true, false, false, 0, 1);
    IfCharacterType(AND10, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND10, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR10, PASS, AND09);
    IfCharacterType(OR10, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR10, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR10, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND09, InsideOutsideState.Inside, 10000, X0_4, X12_4, 1);
    IfInoutsideArea(AND09, InsideOutsideState.Inside, 10000, X16_4, 1);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X0_4, 5450, true, ComparisonType.Equal, 1);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X32_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X36_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL8, PASS, AND08);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, OR08);
    Label8();
    IfConditionGroup(AND09, PASS, OR10);
    IfConditionGroup(OR03, PASS, AND09);
    IfDamageType(OR02, X0_4, -1, DamageType.Unspecified);
    IfCharacterPostureRatio(OR02, X0_4, ComparisonType.Less, 1, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfCharacterHasSpEffect(OR03, X0_4, 9045, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    IfCharacterAIState(OR03, X40_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, OR02);
    WaitFixedTimeSeconds(0.1);
    SkipIfCharacterHasSpEffect(1, X0_4, 5450, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateCompiled(Label.LABEL2, PASS, OR02);
    IfCharacterAIState(OR05, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfElapsedSeconds(OR05, X20_4);
    IfConditionGroup(MAIN, PASS, OR05);
    GotoIfComparison(Label.LABEL1, ComparisonType.Greater, X24_4, 0);
    GotoIfCharacterHasSpEffect(Label.LABEL2, X0_4, 5450, false, ComparisonType.Equal, 1);
    Label1();
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    Label2();
    SkipIfComparison(2, ComparisonType.LessOrEqual, X24_4, 0);
    SetCharacterGravity(X0_4, Enabled);
    SetCharacterMaphit(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X44_4, 0);
    ForceCharacterTarget(X0_4, 10000);
});

Event(20005213, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4, X44_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X24_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    ForceAnimationPlayback(X0_4, X4_4, true, false, false, 0, 1);
    IfCharacterType(AND10, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND10, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR10, PASS, AND09);
    IfCharacterType(OR10, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR10, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR10, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(OR09, InsideOutsideState.Inside, 10000, X0_4, X12_4, 1);
    IfInoutsideArea(OR09, InsideOutsideState.Inside, 10000, X16_4, 1);
    IfConditionGroup(AND09, PASS, OR09);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X0_4, 5450, true, ComparisonType.Equal, 1);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X32_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X36_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL8, PASS, AND08);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, OR08);
    Label8();
    IfConditionGroup(AND09, PASS, OR10);
    IfConditionGroup(OR03, PASS, AND09);
    IfDamageType(OR02, X0_4, -1, DamageType.Unspecified);
    IfCharacterPostureRatio(OR02, X0_4, ComparisonType.Less, 1, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfCharacterHasSpEffect(OR03, X0_4, 9045, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    IfCharacterAIState(OR03, X40_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, OR02);
    WaitFixedTimeSeconds(0.1);
    SkipIfCharacterHasSpEffect(1, X0_4, 5450, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateCompiled(Label.LABEL2, PASS, OR02);
    IfCharacterAIState(OR05, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfElapsedSeconds(OR05, X20_4);
    IfConditionGroup(MAIN, PASS, OR05);
    GotoIfComparison(Label.LABEL1, ComparisonType.Greater, X24_4, 0);
    GotoIfCharacterHasSpEffect(Label.LABEL2, X0_4, 5450, false, ComparisonType.Equal, 1);
    Label1();
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    Label2();
    SkipIfComparison(2, ComparisonType.LessOrEqual, X24_4, 0);
    SetCharacterGravity(X0_4, Enabled);
    SetCharacterMaphit(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X44_4, 0);
    ForceCharacterTarget(X0_4, 10000);
});

Event(20005240, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4) {
    EndIfObjectDestroyed(EventEndType.End, DestructionState.Destroyed, X12_4, ComparisonType.Equal, 1);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    ForceAnimationPlayback(X0_4, X4_4, true, false, false, 0, 1);
    IfObjectDestroyed(OR03, DestructionState.Destroyed, X12_4, ComparisonType.Equal, 1);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X0_4, 5450, true, ComparisonType.Equal, 1);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X24_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X32_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL8, PASS, AND08);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, OR08);
    Label8();
    IfDamageType(OR02, X0_4, -1, DamageType.Unspecified);
    IfCharacterPostureRatio(OR02, X0_4, ComparisonType.Less, 1, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfCharacterHasSpEffect(OR03, X0_4, 9045, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfCharacterAIState(OR03, X36_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, OR02);
    WaitFixedTimeSeconds(0.1);
    SkipIfCharacterHasSpEffect(1, X0_4, 5450, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateCompiled(Label.LABEL2, PASS, OR02);
    IfCharacterAIState(OR05, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfElapsedSeconds(OR05, X16_4);
    IfConditionGroup(MAIN, PASS, OR05);
    GotoIfComparison(Label.LABEL1, ComparisonType.Greater, X20_4, 0);
    GotoIfCharacterHasSpEffect(Label.LABEL2, X0_4, 5450, false, ComparisonType.Equal, 1);
    Label1();
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    Label2();
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Enabled);
    SetCharacterMaphit(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    ForceCharacterTarget(X0_4, 10000);
});

Event(20005250, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    ForceAnimationPlayback(X0_4, X4_4, true, false, false, 0, 1);
    IfCharacterHasSpEffect(OR03, X0_4, X12_4, true, ComparisonType.Equal, 1);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X0_4, 5450, true, ComparisonType.Equal, 1);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X24_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X32_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL8, PASS, AND08);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, OR08);
    Label8();
    IfDamageType(OR02, X0_4, -1, DamageType.Unspecified);
    IfCharacterPostureRatio(OR02, X0_4, ComparisonType.Less, 1, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfCharacterHasSpEffect(OR03, X0_4, 9045, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfCharacterAIState(OR03, X36_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, OR02);
    WaitFixedTimeSeconds(0.1);
    SkipIfCharacterHasSpEffect(1, X0_4, 5450, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateCompiled(Label.LABEL2, PASS, OR02);
    IfCharacterAIState(OR05, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfElapsedSeconds(OR05, X16_4);
    IfConditionGroup(MAIN, PASS, OR05);
    GotoIfComparison(Label.LABEL1, ComparisonType.Greater, X20_4, 0);
    GotoIfCharacterHasSpEffect(Label.LABEL2, X0_4, 5450, false, ComparisonType.Equal, 1);
    Label1();
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    Label2();
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Enabled);
    SetCharacterMaphit(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    ForceCharacterTarget(X0_4, 10000);
});

Event(20005265, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    ForceAnimationPlayback(X0_4, X4_4, true, false, false, 0, 1);
    IfCharacterHasSpEffect(AND09, X12_4, 5450, false, ComparisonType.Equal, 1);
    IfCharacterBackreadStatus(AND09, X12_4, true, ComparisonType.Equal, 1);
    IfCharacterAIState(AND09, X12_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, AND09);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X0_4, 5450, true, ComparisonType.Equal, 1);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X24_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X32_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL8, PASS, AND08);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, OR08);
    Label8();
    IfDamageType(OR02, X0_4, -1, DamageType.Unspecified);
    IfCharacterPostureRatio(OR02, X0_4, ComparisonType.Less, 1, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfCharacterHasSpEffect(OR03, X0_4, 9045, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    IfCharacterAIState(OR03, X36_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, OR02);
    SkipIfComparison(1, ComparisonType.Greater, X20_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL2, PASS, OR02);
    IfCharacterAIState(OR05, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfElapsedSeconds(OR05, X16_4);
    IfConditionGroup(MAIN, PASS, OR05);
    GotoIfComparison(Label.LABEL1, ComparisonType.Greater, X20_4, 0);
    GotoIfCharacterHasSpEffect(Label.LABEL2, X0_4, 5450, false, ComparisonType.Equal, 1);
    Label1();
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    Label2();
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Enabled);
    SetCharacterMaphit(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X40_4, 0);
    ForceCharacterTarget(X0_4, 10000);
});

Event(20005290, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    ForceAnimationPlayback(X0_4, X4_4, true, false, false, 0, 1);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X0_4, 5450, true, ComparisonType.Equal, 1);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X24_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X28_4, 0);
    IfParameterComparison(AND08, ComparisonType.LessOrEqual, X32_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL8, PASS, AND08);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(OR08, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, OR08);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    Label8();
    IfDamageType(OR02, X0_4, -1, DamageType.Unspecified);
    IfCharacterPostureRatio(OR02, X0_4, ComparisonType.Less, 1, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3500, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3501, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3502, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3503, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 3520, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 8300, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfCharacterHasSpEffect(OR01, X0_4, 9045, true, ComparisonType.Equal, 1);
    SkipIfComparison(3, ComparisonType.LessOrEqual, X12_4, 0);
    IfCharacterAIState(OR03, X12_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR03);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, OR02);
    WaitFixedTimeSeconds(0.1);
    SkipIfCharacterHasSpEffect(1, X0_4, 5450, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateCompiled(Label.LABEL2, PASS, OR02);
    IfCharacterAIState(OR05, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR05, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfElapsedSeconds(OR05, X16_4);
    IfConditionGroup(MAIN, PASS, OR05);
    GotoIfComparison(Label.LABEL1, ComparisonType.Greater, X20_4, 0);
    GotoIfCharacterHasSpEffect(Label.LABEL2, X0_4, 5450, false, ComparisonType.Equal, 1);
    Label1();
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    Label2();
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Enabled);
    SetCharacterMaphit(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X36_4, 0);
    ForceCharacterTarget(X0_4, 10000);
});

Event(20005300, Restart, function(X0_4, X4_4, X8_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfConditionGroup(AND01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, AND01);
    ChangeCharacterPatrolBehavior(X0_4, X8_4);
    IfCharacterAIState(AND02, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND02);
    RequestCharacterAIReplan(X0_4);
    EndUnconditionally(EventEndType.End);
});

Event(20005301, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfConditionGroup(AND01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, AND01);
    SetAutogeneratedEventspecificEventFlag2Unknown200375(2, 1);
    WaitFixedTimeSeconds(X12_4);
    ChangeCharacterPatrolBehavior(X0_4, X8_4);
    IfCharacterAIState(AND02, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND02);
    RequestCharacterAIReplan(X0_4);
    EndUnconditionally(EventEndType.End);
});

Event(20005302, Restart, function(X0_4, X4_4, X8_1, X12_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfEventFlag(OR02, X8_1, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(AND01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, AND01);
    ChangeCharacterPatrolBehavior(X0_4, X12_4);
    IfCharacterAIState(AND02, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND02);
    RequestCharacterAIReplan(X0_4);
    EndUnconditionally(EventEndType.End);
});

Event(20005303, Restart, function(X0_4, X4_4, X8_1, X12_4, X16_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfEventFlag(OR02, X8_1, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(AND01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, AND01);
    SetAutogeneratedEventspecificEventFlag2Unknown200375(2, 1);
    WaitFixedTimeSeconds(X16_4);
    ChangeCharacterPatrolBehavior(X0_4, X12_4);
    IfCharacterAIState(AND02, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND02);
    RequestCharacterAIReplan(X0_4);
    EndUnconditionally(EventEndType.End);
});

Event(20005304, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X8_4, 1);
    IfConditionGroup(AND01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, AND01);
    ChangeCharacterPatrolBehavior(X0_4, X12_4);
    IfCharacterAIState(AND02, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND02);
    RequestCharacterAIReplan(X0_4);
    EndUnconditionally(EventEndType.End);
});

Event(20005305, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfEntityInoutsideRadiusOfEntity(OR02, InsideOutsideState.Inside, 10000, X0_4, X4_4, 1);
    IfConditionGroup(AND01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, AND01);
    IfElapsedSeconds(MAIN, X12_4);
    ChangeCharacterPatrolBehavior(X0_4, X8_4);
    IfCharacterAIState(AND02, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND02);
    RequestCharacterAIReplan(X0_4);
    EndUnconditionally(EventEndType.End);
});

Event(20005306, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfInoutsideArea(AND02, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfConditionGroup(OR02, PASS, AND02);
    IfInoutsideArea(AND03, InsideOutsideState.Inside, 10000, X12_4, 1);
    IfConditionGroup(OR02, PASS, AND03);
    IfConditionGroup(AND01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, AND01);
    SkipIfConditionGroupStateCompiled(1, PASS, AND03);
    ChangeCharacterPatrolBehavior(X0_4, X8_4);
    SkipIfConditionGroupStateCompiled(1, PASS, AND02);
    ChangeCharacterPatrolBehavior(X0_4, X16_4);
    IfCharacterAIState(AND02, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND02);
    RequestCharacterAIReplan(X0_4);
    EndUnconditionally(EventEndType.End);
});

Event(20005307, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    IfCharacterDeadalive(AND10, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.End, PASS, AND10);
    IfCharacterDeadalive(AND01, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterAIState(AND01, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    IfElapsedSeconds(AND01, 1);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    IfInoutsideArea(AND01, InsideOutsideState.Inside, X0_4, X8_4, 1);
    IfDamageType(AND02, X0_4, -1, DamageType.Unspecified);
    SkipIfComparison(5, ComparisonType.Equal, X20_4, 0);
    IfCharacterDeadalive(AND03, X20_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterAIState(AND03, X20_4, AIStateType.Normal, ComparisonType.Equal, 1);
    IfElapsedSeconds(AND03, 1);
    IfEntityInoutsideRadiusOfEntity(AND03, InsideOutsideState.Inside, X0_4, X20_4, X24_4, 1);
    IfConditionGroup(AND04, PASS, AND03);
    IfConditionGroup(AND04, PASS, AND01);
    IfConditionGroup(AND04, FAIL, AND02);
    IfConditionGroup(MAIN, PASS, AND04);
    WaitFixedTimeSeconds(1);
    SkipIfEventFlag(1, OFF, TargetEventFlagType.EventIDSlotNumber, 0);
    WaitFixedTimeSeconds(3);
    WaitFixedTimeSeconds(X12_4);
    IfCharacterAIState(AND05, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.Restart, FAIL, AND05);
    ForceAnimationPlayback(X0_4, X4_4, false, false, true, 0, 1);
    WaitFixedTimeSeconds(X16_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005310, Restart, function(X0_4, X4_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfCharacterAIState(MAIN, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    RequestCharacterAICommand(X0_4, X4_4, 0);
});

Event(20005320, Restart, function(X0_4, X4_4, X8_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X8_4);
    SetCharacterAIState(X0_4, Disabled);
    IfCharacterType(AND09, 10000, TargetType.BlackPhantom, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND09, 10000, 3710, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND09);
    IfCharacterType(OR01, 10000, TargetType.Alive, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.Hollow, ComparisonType.Equal, 1);
    IfCharacterType(OR01, 10000, TargetType.WhitePhantom, ComparisonType.Equal, 1);
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfConditionGroup(AND02, PASS, OR01);
    IfConditionGroup(AND02, PASS, AND01);
    IfConditionGroup(OR02, PASS, AND02);
    IfCharacterDamagedBy(OR02, X0_4, 10000);
    IfConditionGroup(MAIN, PASS, OR02);
    Label0();
    SetEventFlag(X8_4, ON);
    SetSpEffect(X0_4, 5000);
    SetCharacterAIState(X0_4, Enabled);
    IfCharacterAIState(MAIN, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    ClearSpEffect(X0_4, 5000);
});

Event(20005321, Restart, function(X0_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetSpEffect(X0_4, 5000);
    IfCharacterAIState(MAIN, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    ClearSpEffect(X0_4, 5000);
});

Event(20005330, Restart, function(X0_4, X4_4, X8_2, X12_4) {
    WaitFixedTimeSeconds(0.1);
    IfCharacterDeadalive(AND01, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.End, PASS, AND01);
    IfCharacterDeadalive(AND10, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterAIState(AND10, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    IfConditionGroup(OR10, PASS, AND10);
    IfCharacterBackreadStatus(OR10, X0_4, false, ComparisonType.Equal, 1);
    IfConditionGroup(AND11, PASS, OR10);
    IfCharacterHasSpEffect(AND11, 10000, 110136, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL12, PASS, AND11);
    IfCharacterAIState(OR02, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR02, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfConditionGroup(AND02, PASS, OR02);
    IfCharacterDeadalive(AND02, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterBackreadStatus(AND02, X0_4, true, ComparisonType.Equal, 1);
    IfEntityLoaded(AND02, X0_4, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND02);
    DisplayMinibossHealthBar(Enabled, X0_4, X8_2, X4_4);
    SetNetworkUpdateRate(X0_4, true, CharacterUpdateFrequency.AlwaysUpdate);
    GotoIfComparison(Label.LABEL6, ComparisonType.Equal, X12_4, 1);
    GotoIfComparison(Label.LABEL7, ComparisonType.Equal, X12_4, 2);
    GotoIfComparison(Label.LABEL8, ComparisonType.Equal, X12_4, 3);
    GotoIfComparison(Label.LABEL9, ComparisonType.Equal, X12_4, 4);
    Label6();
    SetEventFlag(9201, ON);
    GotoUnconditionally(Label.LABEL10);
    Label7();
    SetEventFlag(9202, ON);
    GotoUnconditionally(Label.LABEL10);
    Label8();
    SetEventFlag(9203, ON);
    GotoUnconditionally(Label.LABEL10);
    Label9();
    SetEventFlag(9204, ON);
    Label10();
    IfCharacterAIState(AND03, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND03, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR04, PASS, AND03);
    IfCharacterBackreadStatus(OR14, X0_4, false, ComparisonType.Equal, 1);
    IfEntityLoaded(OR14, X0_4, false, ComparisonType.Equal, 1);
    IfConditionGroup(AND04, PASS, OR14);
    IfCharacterDeadalive(AND04, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR04, PASS, AND04);
    IfCharacterDeadalive(OR04, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR04, X0_4, 220020, true, ComparisonType.Equal, 1);
    IfEventFlag(OR04, ON, TargetEventFlagType.EventFlag, 9200);
    IfConditionGroup(MAIN, PASS, OR04);
    Label12();
    DisplayMinibossHealthBar(Disabled, X0_4, X8_2, X4_4);
    SetNetworkUpdateRate(X0_4, false, CharacterUpdateFrequency.AlwaysUpdate);
    SkipIfComparison(1, ComparisonType.NotEqual, X12_4, 4);
    SetEventFlag(9204, OFF);
    GotoIfEventFlag(Label.LABEL11, ON, TargetEventFlagType.EventFlag, 9200);
    IfMapAlertMusicState(AND05, MusicStateType.Combat, false);
    GotoIfConditionGroupStateUncompiled(Label.LABEL11, PASS, AND05);
    IfMapAlertMusicState(OR07, MusicStateType.Combat, false);
    IfCharacterAIState(OR06, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR06, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfConditionGroup(AND07, PASS, OR06);
    IfCharacterDeadalive(AND07, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterBackreadStatus(AND07, X0_4, true, ComparisonType.Equal, 1);
    IfEntityLoaded(AND07, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND07, X0_4, 220020, false, ComparisonType.Equal, 1);
    IfConditionGroup(OR07, PASS, AND07);
    IfEventFlag(OR07, ON, TargetEventFlagType.EventFlag, 9200);
    IfConditionGroup(MAIN, PASS, OR07);
    GotoIfEventFlag(Label.LABEL11, ON, TargetEventFlagType.EventFlag, 9200);
    IfCharacterAIState(OR08, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterAIState(OR08, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfConditionGroup(AND08, PASS, OR08);
    IfCharacterDeadalive(AND08, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterBackreadStatus(AND08, X0_4, true, ComparisonType.Equal, 1);
    IfEntityLoaded(AND08, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND08, X0_4, 220020, false, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.Restart, PASS, AND08);
    Label11();
    GotoIfComparison(Label.LABEL1, ComparisonType.Equal, X12_4, 1);
    GotoIfComparison(Label.LABEL2, ComparisonType.Equal, X12_4, 2);
    GotoIfComparison(Label.LABEL3, ComparisonType.Equal, X12_4, 3);
    GotoIfComparison(Label.LABEL4, ComparisonType.Equal, X12_4, 4);
    Label1();
    SetEventFlag(9201, OFF);
    GotoUnconditionally(Label.LABEL5);
    Label2();
    SetEventFlag(9202, OFF);
    GotoUnconditionally(Label.LABEL5);
    Label3();
    SetEventFlag(9203, OFF);
    GotoUnconditionally(Label.LABEL5);
    Label4();
    SetEventFlag(9204, OFF);
    Label5();
    IfCharacterBackreadStatus(MAIN, X0_4, true, ComparisonType.Equal, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005331, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    RequestCharacterAICommand(X4_4, X12_4, 2);
    SkipIfComparison(2, ComparisonType.Equal, X20_4, 0);
    SkipIfCharacterHasSpEffect(1, X4_4, 220900, true, ComparisonType.Equal, 1);
    SetSpEffect(X4_4, 30200);
    SkipIfComparison(1, ComparisonType.Greater, X20_4, 0);
    IfCharacterHasSpEffect(AND01, X4_4, 220900, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, X4_4, 220900, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND02, 10000, 110015, true, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND02, InsideOutsideState.Inside, 10000, X4_4, X8_4, 1);
    IfConditionGroup(OR01, PASS, AND02);
    IfEntityInoutsideRadiusOfEntity(AND03, InsideOutsideState.Inside, 10000, X4_4, X16_4, 1);
    IfCharacterHasSpEffect(AND03, 10000, 110010, false, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND03, 10000, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND03);
    IfCharacterAIState(AND05, X4_4, AIStateType.Normal, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND05, X4_4, 220020, false, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND05, InsideOutsideState.Outside, 10000, X4_4, X8_4, 1);
    IfConditionGroup(OR01, PASS, AND05);
    IfEntityLoaded(AND06, X4_4, false, ComparisonType.Equal, 1);
    IfCharacterBackreadStatus(AND06, X4_4, true, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND06, X4_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND06);
    IfCharacterHasSpEffect(AND07, X4_4, 9045, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR07, PASS, AND07);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(OR07, PASS, AND01);
    IfConditionGroup(MAIN, PASS, OR07);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    IfCharacterDeadalive(AND08, X4_4, DeathState.Dead, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.End, PASS, AND08);
    IfCharacterAIState(AND10, X4_4, AIStateType.Normal, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND10, InsideOutsideState.Outside, 10000, X4_4, X8_4, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND10);
    IfEntityLoaded(AND11, X4_4, false, ComparisonType.Equal, 1);
    IfCharacterBackreadStatus(AND11, X4_4, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND11);
    IfCharacterHasSpEffect(AND12, X4_4, 9045, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND12, X4_4, 220900, false, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL1, PASS, AND12);
    ForceCharacterTarget(X4_4, 10000);
    ClearSpEffect(X4_4, 30200);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    SetSpEffect(X4_4, 8010);
    ClearSpEffect(X4_4, 220900);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    SetSpEffect(X4_4, 30200);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
    Label1();
    SetSpEffect(X4_4, 220900);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005332, Restart, function(X0_4, X4_4) {
    IfCharacterHasSpEffect(AND01, X0_4, 220900, true, ComparisonType.Equal, 1);
    IfCharacterAIState(AND01, X0_4, AIStateType.Combat, ComparisonType.NotEqual, 1);
    IfCharacterDeadalive(AND01, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND01, 10000, 110015, true, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND01, InsideOutsideState.Inside, 10000, X0_4, X4_4, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    ForceCharacterTarget(X0_4, 10000);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005340, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_1, X37_1, X38_1, X39_1, X40_4) {
    ChangeCharacterEnableState(X4_4, Disabled);
    SetCharacterAnimationState(X4_4, Disabled);
    SetCharacterBackreadState(X4_4, true);
    SkipIfComparison(1, ComparisonType.Equal, X40_4, 0);
    GotoIfEventFlag(Label.LABEL5, ON, TargetEventFlagType.EventFlag, X40_4);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    IfParameterComparison(AND01, ComparisonType.Equal, X20_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X24_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X32_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(OR01, X36_1, TargetEventFlagType.EventFlag, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X24_4, 0);
    IfEventFlag(OR01, X37_1, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X38_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR01, X39_1, TargetEventFlagType.EventFlag, X32_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(3, PASS, OR01);
    ChangeCharacterEnableState(X4_4, Enabled);
    SetCharacterAnimationState(X4_4, Enabled);
    SetCharacterBackreadState(X4_4, false);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    SetSpEffect(X4_4, 4800);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X24_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    IfCharacterHPRatioNew(AND15, X4_4, ComparisonType.Equal, 0, ComparisonType.Equal, 1);
    IfNumberOfCharacterHealthBarsOther(AND15, X4_4, ComparisonType.Equal, 0, ComparisonType.Equal, 1);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    GotoIfConditionGroupStateCompiled(Label.LABEL0, PASS, AND15);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    ClearSpEffect(X4_4, 4800);
    IfCharacterHasSpEffect(OR05, X4_4, 220020, true, ComparisonType.Equal, 1);
    IfCharacterDrawgroupState(OR05, X4_4, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR05);
    SkipIfComparison(1, ComparisonType.Equal, X40_4, 0);
    SetEventFlag(X40_4, ON);
    SkipIfCharacterHasSpEffect(1, X4_4, 220020, false, ComparisonType.Equal, 1);
    WaitFixedTimeSeconds(3);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    SetEventFlag(X0_4, ON);
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    AwardItemsIncludingClients(X12_4);
    GotoUnconditionally(Label.LABEL2);
    Label1();
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    AwardItemsIncludingClients(X16_4);
    Label2();
    SkipIfCharacterHasSpEffect(2, X4_4, 220020, true, ComparisonType.Equal, 1);
    SetEventFlag(X40_4, OFF);
    EndUnconditionally(EventEndType.End);
    IfCharacterDrawgroupState(MAIN, X4_4, true, ComparisonType.Equal, 1);
    SetEventFlag(X40_4, OFF);
    Label5();
    ForceCharacterDeath(X4_4, true);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    GotoIfEventFlag(Label.LABEL12, ON, TargetEventFlagType.EventFlag, X0_4);
    WaitFixedTimeSeconds(2.8);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    SetEventFlag(X0_4, ON);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    GotoIfEventFlag(Label.LABEL11, ON, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    AwardItemsIncludingClients(X12_4);
    GotoUnconditionally(Label.LABEL12);
    Label11();
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    AwardItemsIncludingClients(X16_4);
    Label12();
    SetEventFlag(X40_4, OFF);
});

Event(20005341, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_1, X37_1, X38_1, X39_1, X40_4, X44_4) {
    ChangeCharacterEnableState(X4_4, Disabled);
    SetCharacterAnimationState(X4_4, Disabled);
    SetCharacterBackreadState(X4_4, true);
    SkipIfComparison(1, ComparisonType.Equal, X40_4, 0);
    GotoIfEventFlag(Label.LABEL5, ON, TargetEventFlagType.EventFlag, X40_4);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    IfParameterComparison(AND01, ComparisonType.Equal, X20_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X24_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X32_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(OR01, X36_1, TargetEventFlagType.EventFlag, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X24_4, 0);
    IfEventFlag(OR01, X37_1, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X38_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR01, X39_1, TargetEventFlagType.EventFlag, X32_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(3, PASS, OR01);
    ChangeCharacterEnableState(X4_4, Enabled);
    SetCharacterAnimationState(X4_4, Enabled);
    SetCharacterBackreadState(X4_4, false);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    SetSpEffect(X4_4, 4800);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X24_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    IfCharacterHPRatioNew(AND15, X4_4, ComparisonType.Equal, 0, ComparisonType.Equal, 1);
    IfNumberOfCharacterHealthBarsOther(AND15, X4_4, ComparisonType.Equal, 0, ComparisonType.Equal, 1);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    GotoIfConditionGroupStateCompiled(Label.LABEL0, PASS, AND15);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    ClearSpEffect(X4_4, 4800);
    IfCharacterHasSpEffect(OR05, X4_4, 220020, true, ComparisonType.Equal, 1);
    IfCharacterDrawgroupState(OR05, X4_4, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR05);
    SkipIfComparison(1, ComparisonType.Equal, X40_4, 0);
    SetEventFlag(X40_4, ON);
    WaitFixedTimeSeconds(X44_4);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    SetEventFlag(X0_4, ON);
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    AwardItemsIncludingClients(X12_4);
    GotoUnconditionally(Label.LABEL2);
    Label1();
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    AwardItemsIncludingClients(X16_4);
    Label2();
    SkipIfCharacterHasSpEffect(2, X4_4, 220020, true, ComparisonType.Equal, 1);
    SetEventFlag(X40_4, OFF);
    EndUnconditionally(EventEndType.End);
    IfCharacterDrawgroupState(MAIN, X4_4, true, ComparisonType.Equal, 1);
    SetEventFlag(X40_4, OFF);
    Label5();
    ForceCharacterDeath(X4_4, true);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    GotoIfEventFlag(Label.LABEL12, ON, TargetEventFlagType.EventFlag, X0_4);
    WaitFixedTimeSeconds(2.8);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    SetEventFlag(X0_4, ON);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    GotoIfEventFlag(Label.LABEL11, ON, TargetEventFlagType.EventFlag, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    AwardItemsIncludingClients(X12_4);
    GotoUnconditionally(Label.LABEL12);
    Label11();
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    AwardItemsIncludingClients(X16_4);
    Label12();
    SetEventFlag(X40_4, OFF);
});

Event(20005370, Restart, function(X0_4) {
    IfCharacterDeadalive(MAIN, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    SetCharacterAIState(X0_4, Disabled);
    ClearCharactersAITarget(X0_4);
});

Event(20005380, Restart, function(X0_4, X4_4, X8_1, X9_1) {
    SetNetworkSyncState(Disabled);
    IfCharacterDeadalive(AND15, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND15);
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfPlayerInoutMap(AND01, true, X8_1, X9_1);
    IfConditionGroup(MAIN, PASS, AND01);
    SetCharacterDefaultBackreadState(X0_4, Enabled);
    WaitFixedTimeSeconds(2);
    IfInoutsideArea(OR01, InsideOutsideState.Outside, 10000, X4_4, 1);
    IfPlayerInoutMap(OR01, false, X8_1, X9_1);
    IfConditionGroup(MAIN, PASS, OR01);
    SetCharacterDefaultBackreadState(X0_4, Disabled);
    WaitFixedTimeSeconds(2);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    SetCharacterDefaultBackreadState(X0_4, Disabled);
    EndUnconditionally(EventEndType.End);
});

Event(20005381, Restart, function(X0_4, X4_4, X8_1, X9_1) {
    SetNetworkSyncState(Disabled);
    IfCharacterDeadalive(AND15, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND15);
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfPlayerInoutMap(AND01, true, X8_1, X9_1);
    IfConditionGroup(MAIN, PASS, AND01);
    SetNetworkUpdateRate(X0_4, true, CharacterUpdateFrequency.AlwaysUpdate);
    WaitFixedTimeSeconds(2);
    IfInoutsideArea(OR01, InsideOutsideState.Outside, 10000, X4_4, 1);
    IfPlayerInoutMap(OR01, false, X8_1, X9_1);
    IfConditionGroup(MAIN, PASS, OR01);
    SetNetworkUpdateRate(X0_4, false, CharacterUpdateFrequency.NoUpdate);
    WaitFixedTimeSeconds(2);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    SetNetworkUpdateRate(X0_4, false, CharacterUpdateFrequency.NoUpdate);
    EndUnconditionally(EventEndType.End);
});

Event(2005390, Restart, function(X0_4, X4_4, X8_4) {
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    ClearSpEffect(X0_4, X8_4);
    IfCharacterHasSpEffect(MAIN, X0_4, X4_4, false, ComparisonType.Equal, 1);
    Label0();
    SetSpEffect(X0_4, X8_4);
});

Event(2005391, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_1) {
    IfInoutsideArea(AND01, InsideOutsideState.Inside, X0_4, X4_4, 1);
    IfCharacterDeadalive(AND01, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(AND01, X24_1, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND01);
    SetSpEffect(X8_4, X12_4);
    WaitFixedTimeSeconds(X16_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(2005395, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfCharacterHasSpEffect(AND01, X0_4, X24_4, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    IfCharacterHasSpEffect(AND01, X0_4, X20_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND01, X0_4, X4_4, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    SetSpEffect(X8_4, X12_4);
    WaitFixedTimeSeconds(X16_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(2005396, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    ClearSpEffect(X8_4, X12_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    ClearSpEffect(X8_4, X16_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    ClearSpEffect(X8_4, X20_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    ClearSpEffect(X8_4, X24_4);
    IfCharacterHasSpEffect(AND01, X0_4, X4_4, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    SetSpEffect(X8_4, X12_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    SetSpEffect(X8_4, X16_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    SetSpEffect(X8_4, X20_4);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    SetSpEffect(X8_4, X24_4);
    IfCharacterHasSpEffect(AND02, X0_4, X4_4, false, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND02);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005400, Restart, function(X0_4, X4_2, X8_4, X12_4, X16_4, X20_4, X24_4, X28_1, X29_1) {
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part1, X12_4, 1, 0, false, false);
    SetNPCPartDamagingProsthetic(X0_4, X4_2, ProstheticType.LoadedAxe);
    GotoIfComparison(Label.LABEL0, ComparisonType.Equal, X20_4, 0);
    IfNPCPartHP(MAIN, X0_4, X8_4, X24_4, ComparisonType.LessOrEqual);
    ChangeCharacterDispmask(X0_4, X28_1, OFF);
    ChangeCharacterDispmask(X0_4, X29_1, ON);
    Label0();
    IfNPCPartHP(MAIN, X0_4, X8_4, 0, ComparisonType.LessOrEqual);
    ForceAnimationPlayback(X0_4, X16_4, false, false, false, 0, 1);
    ClearSpEffect(X0_4, 220063);
    SetSpEffect(X0_4, 230300);
    SetSpEffect(X0_4, 230301);
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part1, 999999999, 1, 0, true, false);
});

Event(20005401, Restart, function(X0_4, X4_2, X8_4, X12_4, X16_4, X20_1, X21_1) {
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part1, X12_4, 1, 0, false, false);
    SetNPCPartDamagingProsthetic(X0_4, X4_2, ProstheticType.LoadedAxe);
    IfNPCPartHP(MAIN, X0_4, X8_4, 0, ComparisonType.LessOrEqual);
    IfCharacterHasSpEffect(AND01, X0_4, 3118101, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND01);
    ChangeCharacterDispmask(X0_4, X20_1, OFF);
    ChangeCharacterDispmask(X0_4, X21_1, ON);
    SetSpEffect(X0_4, 3118101);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    ForceAnimationPlayback(X0_4, X16_4, false, false, false, 0, 1);
    ClearSpEffect(X0_4, 220063);
    SetSpEffect(X0_4, 230300);
    SetSpEffect(X0_4, 230301);
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part1, 999999999, 1, 0, true, false);
    EndUnconditionally(EventEndType.End);
});

Event(20005410, Restart, function(X0_4, X4_2, X8_4, X12_4, X16_4, X20_4, X24_4, X28_1, X29_1) {
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part2, X12_4, 1, 0.7, false, false);
    SetNPCPartDamagingProsthetic(X0_4, X4_2, ProstheticType.LoadedSpear);
    SetSpEffect(X0_4, 220061);
    SetSpEffect(X0_4, 220062);
    SetSpEffect(X0_4, 400250);
    GotoIfComparison(Label.LABEL0, ComparisonType.Equal, X20_4, 0);
    IfNPCPartHP(MAIN, X0_4, X8_4, X24_4, ComparisonType.LessOrEqual);
    ChangeCharacterDispmask(X0_4, X28_1, OFF);
    ChangeCharacterDispmask(X0_4, X29_1, ON);
    Label0();
    IfNPCPartHP(MAIN, X0_4, X8_4, 0, ComparisonType.LessOrEqual);
    ForceAnimationPlayback(X0_4, X16_4, false, false, false, 0, 1);
    ClearSpEffect(X0_4, 220061);
    ClearSpEffect(X0_4, 220062);
    ClearSpEffect(X0_4, 400250);
    SetSpEffect(X0_4, 230400);
    SetSpEffect(X0_4, 230401);
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part2, 999999999, 1, 1, false, false);
    EndUnconditionally(EventEndType.End);
});

Event(20005411, Restart, function(X0_4, X4_2, X8_4, X12_4) {
    IfCharacterHasSpEffect(AND02, X0_4, 230410, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL1, PASS, AND02);
    SetSpEffect(X0_4, 220061);
    SetSpEffect(X0_4, 220062);
    SetSpEffect(X0_4, 400250);
    Label1();
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part2, X12_4, 1, 1, false, false);
    SetNPCPartDamagingProsthetic(X0_4, X4_2, ProstheticType.LoadedSpear);
    IfNPCPartHP(MAIN, X0_4, X8_4, 0, ComparisonType.LessOrEqual);
    ForceAnimationPlayback(X0_4, 20039, false, false, false, 0, 1);
    WaitFixedTimeFrames(14);
    IfCharacterHasSpEffect(AND01, X0_4, 230410, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND01);
    ChangeCharacterDispmask(X0_4, 21, OFF);
    ChangeCharacterDispmask(X0_4, 24, ON);
    SetSpEffect(X0_4, 230410);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    ShootBullet(X0_4, X0_4, 101, 210700920, 0, 0, 0);
    ShootBullet(X0_4, X0_4, 101, 210700921, 0, 0, 0);
    WaitFixedTimeFrames(1);
    ShootBullet(X0_4, X0_4, 6, 210700930, 0, 0, 0);
    ChangeCharacterDispmask(X0_4, 20, OFF);
    ChangeCharacterDispmask(X0_4, 21, OFF);
    ChangeCharacterDispmask(X0_4, 22, OFF);
    ChangeCharacterDispmask(X0_4, 23, OFF);
    ChangeCharacterDispmask(X0_4, 24, OFF);
    ClearSpEffect(X0_4, 220061);
    ClearSpEffect(X0_4, 220062);
    ClearSpEffect(X0_4, 400250);
    SetSpEffect(X0_4, 230400);
    SetSpEffect(X0_4, 230401);
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part2, 999999999, 1, 1, false, false);
    EndUnconditionally(EventEndType.End);
});

Event(20005420, Restart, function(X0_4, X4_4, X8_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    IfCharacterDeadalive(AND01, X8_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND01, X8_4, 385000, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    ShowSmallHintBox(X4_4, 10021520);
    IfCharacterDeadalive(OR01, X8_4, DeathState.Dead, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR01, X8_4, 385000, false, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR01);
    RemoveHintBox(X4_4);
    SetEventFlag(X0_4, ON);
});

Event(20005421, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4) {
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    IfCharacterAIState(AND01, X8_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND01, X8_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND01);
    SkipIfComparison(3, ComparisonType.LessOrEqual, X24_4, 0);
    IfCharacterAIState(AND02, X12_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND02, X12_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND02);
    SkipIfComparison(3, ComparisonType.LessOrEqual, X28_4, 0);
    IfCharacterAIState(AND03, X16_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND03, X16_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND03);
    SkipIfComparison(3, ComparisonType.LessOrEqual, X32_4, 0);
    IfCharacterAIState(AND04, X20_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND04, X20_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND04);
    SkipIfComparison(3, ComparisonType.LessOrEqual, X36_4, 0);
    IfCharacterAIState(AND05, X24_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND05, X24_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND05);
    SkipIfComparison(3, ComparisonType.LessOrEqual, X40_4, 0);
    IfCharacterAIState(AND06, X28_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfCharacterDeadalive(AND06, X28_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND06);
    IfConditionGroup(AND15, PASS, OR01);
    IfPlayerHasdoesntHaveItem(AND15, ItemType.Goods, 2450, OwnershipState.Owns);
    IfConditionGroup(MAIN, PASS, AND15);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    WaitFixedTimeSeconds(1);
    ShowHintBox(X4_4, 10020120, 10020121);
    WaitFixedTimeSeconds(5);
    RemoveHintBox(X4_4);
    SetEventFlag(X0_4, ON);
});

Event(20005430, Restart, function(X0_4, X4_2, X6_2, X8_2, X10_2) {
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part1, 100000, 1, 1, false, false);
    CreateNPCPart(X0_4, X6_2, NPCPartType.Part2, 100000, 1, 1, false, false);
    CreateNPCPart(X0_4, X8_2, NPCPartType.Part3, 100000, 1, 1, false, false);
    CreateNPCPart(X0_4, X10_2, NPCPartType.Part4, 100000, 1, 1, false, false);
});

Event(20005431, Restart, function(X0_4) {
    IfCharacterAIState(OR01, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR01, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfCharacterDeadalive(AND01, X0_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    RequestCharacterAICommand(X0_4, 10, 1);
    RequestCharacterAIReplan(X0_4);
    IfCharacterHasSpEffect(MAIN, X0_4, 3135000, true, ComparisonType.Equal, 1);
    RequestCharacterAICommand(X0_4, 0, 1);
    RequestCharacterAIReplan(X0_4);
    IfCharacterHasEventMessage(MAIN, X0_4, 10, true, ComparisonType.Equal, 1);
    ShootBullet(X0_4, X0_4, 40, 213500310, 0, 0, 0);
    ClearSpEffect(X0_4, 3135000);
    WaitFixedTimeSeconds(10);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005432, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4) {
    IfCharacterHasSpEffect(OR01, X0_4, 230645, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR01, X0_4, 230646, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, FAIL, OR01);
    SetSpEffect(X0_4, 5301);
    ClearSpEffect(X0_4, 5305);
    SetNPCPartSEAndSFX(X0_4, X4_4, 109, 109);
    SetNPCPartSEAndSFX(X0_4, X8_4, 109, 109);
    SetNPCPartSEAndSFX(X0_4, X12_4, 109, 109);
    SetNPCPartSEAndSFX(X0_4, X16_4, 109, 109);
    SetSpEffect(X0_4, 300340);
    IfCharacterHasSpEffect(OR02, X0_4, 230645, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 230646, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR02);
    SetSpEffect(X0_4, 5305);
    ClearSpEffect(X0_4, 5301);
    SetNPCPartSEAndSFX(X0_4, X4_4, 130, 130);
    SetNPCPartSEAndSFX(X0_4, X8_4, 130, 130);
    SetNPCPartSEAndSFX(X0_4, X12_4, 130, 130);
    SetNPCPartSEAndSFX(X0_4, X16_4, 130, 130);
    ClearSpEffect(X0_4, 300340);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005433, Restart, function(X0_4, X4_4) {
    IfCharacterHasSpEffect(MAIN, X0_4, 3135010, true, ComparisonType.Equal, 1);
    ClearSpEffect(X0_4, 3135500);
    IfCharacterHasEventMessage(MAIN, X0_4, 20, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(MAIN, 10000, 9481, false, ComparisonType.Equal, 1);
    IfInoutsideArea(OR01, InsideOutsideState.Outside, 10000, X4_4, 1);
    IfPlayerSwimState(OR01, SwimState.Swimming);
    IfPlayerSwimState(OR01, SwimState.Diving);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, OR01);
    WarpCharacterAndCopyFloor(X0_4, TargetEntityType.Character, 10000, -1, 10000);
    ForceAnimationPlayback(X0_4, 20004, false, false, false, 0, 1);
    IfCharacterHasSpEffect(MAIN, X0_4, 5031, true, ComparisonType.Equal, 1);
    ClearSpEffect(X0_4, 3135010);
    SetSpEffect(X0_4, 3135500);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    WaitFixedTimeSeconds(1);
    ForceAnimationPlayback(X0_4, 20001, false, false, false, 0, 1);
    ClearSpEffect(X0_4, 3135010);
    SetSpEffect(X0_4, 3135500);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005440, Restart, function(X0_4, X4_2) {
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part1, 100000, 1, 1, false, false);
});

Event(20005442, Restart, function(X0_4, X4_4) {
    IfCharacterHasSpEffect(OR01, X0_4, 230645, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR01, X0_4, 230646, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR11, FAIL, OR01);
    IfCharacterHasSpEffect(OR11, X0_4, 3108040, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR11);
    IfCharacterHasSpEffect(AND10, X0_4, 3108040, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND10);
    SetNPCPartSEAndSFX(X0_4, X4_4, 109, 109);
    SetSpEffect(X0_4, 300340);
    IfCharacterHasSpEffect(OR02, X0_4, 230645, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 230646, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR12, PASS, OR02);
    IfCharacterHasSpEffect(OR12, X0_4, 3108040, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR12);
    IfCharacterHasSpEffect(AND09, X0_4, 3108040, true, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND09);
    SetNPCPartSEAndSFX(X0_4, X4_4, 130, 130);
    ClearSpEffect(X0_4, 300340);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    SetNPCPartSEAndSFX(X0_4, X4_4, 100, 100);
    IfCharacterHasSpEffect(MAIN, X0_4, 3108040, false, ComparisonType.Equal, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005444, Restart, function(X0_4) {
    IfCharacterHasSpEffect(OR01, 10000, 106030, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR01, 10000, 3451, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR01);
    SetSpEffect(X0_4, 3108010);
    IfCharacterHasSpEffect(OR02, 10000, 106030, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, 10000, 3451, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, FAIL, OR02);
    ClearSpEffect(X0_4, 3108010);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005446, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4) {
    IfCharacterHasEventMessage(MAIN, X0_4, 10, true, ComparisonType.Equal, 1);
    SkipIfComparison(1, ComparisonType.Equal, 0, X4_4);
    ShootBullet(X0_4, X4_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X8_4);
    ShootBullet(X0_4, X8_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X12_4);
    ShootBullet(X0_4, X12_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X16_4);
    ShootBullet(X0_4, X16_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    ShootBullet(X0_4, X20_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X24_4);
    ShootBullet(X0_4, X24_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X28_4);
    ShootBullet(X0_4, X28_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X32_4);
    ShootBullet(X0_4, X32_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X36_4);
    ShootBullet(X0_4, X36_4, 260, 210800640, 0, 0, 0);
    SkipIfComparison(1, ComparisonType.Equal, 0, X40_4);
    ShootBullet(X0_4, X40_4, 260, 210800640, 0, 0, 0);
    IfCharacterHasEventMessage(MAIN, X0_4, 10, false, ComparisonType.Equal, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005448, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4) {
    IfCharacterHasEventMessage(AND01, X0_4, 20, true, ComparisonType.Equal, 1);
    IfNumberOfCharacterHealthBars(AND01, X0_4, ComparisonType.NotEqual, 0, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND01, X0_4, 220020, false, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    SetSpEffect(X0_4, 3108020);
    SetSpEffect(X0_4, 6071);
    RequestCharacterAIReplan(X0_4);
    WaitFixedTimeSeconds(0.5);
    SetCharacterAnimationState(X0_4, Disabled);
    ClearSpEffect(X0_4, 3108030);
    WaitFixedTimeSeconds(1.5);
    SetLockOnPoint(X0_4, 220, Disabled);
    WaitFixedTimeSeconds(2);
    SkipIfComparison(1, ComparisonType.Equal, 0, X8_4);
    GotoIfPlayerInoutsideArea(Label.LABEL1, InsideOutsideState.Inside, 10000, X8_4, 1);
    SkipIfComparison(1, ComparisonType.Equal, 0, X16_4);
    GotoIfPlayerInoutsideArea(Label.LABEL2, InsideOutsideState.Inside, 10000, X16_4, 1);
    SkipIfComparison(1, ComparisonType.Equal, 0, X24_4);
    GotoIfPlayerInoutsideArea(Label.LABEL3, InsideOutsideState.Inside, 10000, X24_4, 1);
    SkipIfComparison(1, ComparisonType.Equal, 0, X32_4);
    GotoIfPlayerInoutsideArea(Label.LABEL4, InsideOutsideState.Inside, 10000, X32_4, 1);
    WarpCharacterAndCopyFloor(X0_4, TargetEntityType.Area, X4_4, -1, 10000);
    GotoUnconditionally(Label.LABEL0);
    Label1();
    WarpCharacterAndCopyFloor(X0_4, TargetEntityType.Area, X12_4, -1, 10000);
    GotoUnconditionally(Label.LABEL0);
    Label2();
    WarpCharacterAndCopyFloor(X0_4, TargetEntityType.Area, X20_4, -1, 10000);
    GotoUnconditionally(Label.LABEL0);
    Label3();
    WarpCharacterAndCopyFloor(X0_4, TargetEntityType.Area, X28_4, -1, 10000);
    GotoUnconditionally(Label.LABEL0);
    Label4();
    WarpCharacterAndCopyFloor(X0_4, TargetEntityType.Area, X36_4, -1, 10000);
    GotoUnconditionally(Label.LABEL0);
    Label0();
    WaitFixedTimeSeconds(2);
    RequestCharacterAICommand(X0_4, 10, 0);
    WaitFixedTimeSeconds(0.1);
    RequestCharacterAIReplan(X0_4);
    ClearSpEffect(X0_4, 3108020);
    ClearSpEffect(X0_4, 6071);
    SetSpEffect(X0_4, 3108030);
    SetLockOnPoint(X0_4, 220, Enabled);
    WaitFixedTimeSeconds(0.5);
    SetCharacterAnimationState(X0_4, Enabled);
    WaitFixedTimeSeconds(2);
    IfCharacterHasEventMessage(AND02, X0_4, 20, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, FAIL, AND02);
    RequestCharacterAICommand(X0_4, 0, 0);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005450, Restart, function(X0_4, X4_4) {
    IfCharacterDeadalive(AND15, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.End, PASS, AND15);
    IfCharacterHasSpEffect(OR02, 10000, 110040, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, 10000, 110041, true, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR02);
    IfPlayerIsLookingAtEntity(AND01, true, X0_4, X0_4, 100, 100);
    IfConditionGroup(OR01, PASS, AND01);
    IfEntityInoutsideRadiusOfEntity(OR01, InsideOutsideState.Inside, X0_4, 10000, X4_4, 1);
    IfCharacterAIState(OR01, X0_4, AIStateType.Recognition, ComparisonType.Equal, 1);
    IfCharacterAIState(OR01, X0_4, AIStateType.Alert, ComparisonType.Equal, 1);
    IfCharacterAIState(OR01, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR01);
    SetCharacterDefaultBackreadState(X0_4, Enabled);
    SetNetworkUpdateRate(X0_4, true, CharacterUpdateFrequency.AlwaysUpdate);
    IfCharacterHasSpEffect(OR03, 10000, 110040, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR03, 10000, 110041, true, ComparisonType.Equal, 1);
    IfConditionGroup(AND03, PASS, OR03);
    IfPlayerIsLookingAtEntity(AND03, true, X0_4, X0_4, 100, 100);
    IfConditionGroup(AND05, FAIL, AND03);
    IfEntityInoutsideRadiusOfEntity(AND05, InsideOutsideState.Outside, X0_4, 10000, X4_4, 1);
    IfCharacterAIState(AND05, X0_4, AIStateType.Normal, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND05);
    SetCharacterDefaultBackreadState(X0_4, Disabled);
    SetNetworkUpdateRate(X0_4, false, CharacterUpdateFrequency.AlwaysUpdate);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005451, Default, function(X0_4, X4_4, X8_4) {
    IfCharacterDeadalive(AND01, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.End, PASS, AND01);
    IfEntityInoutsideRadiusOfEntity(AND02, InsideOutsideState.Outside, X0_4, 10000, X4_4, 1);
    IfCharacterAIState(AND02, X0_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND02);
    IfCharacterHasSpEffect(OR01, X0_4, 3132011, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR01);
    SetSpEffect(X0_4, 3132011);
    IfCharacterHasEventMessage(MAIN, X0_4, 10, true, ComparisonType.Equal, 1);
    ClearSpEffect(X0_4, 3132011);
    ChangeCharacterEnableState(X0_4, Disabled);
    SetCharacterAnimationState(X0_4, Disabled);
    ResetCharacterPosition(X0_4);
    SetCharacterBackreadState(X0_4, true);
    WaitFixedTimeSeconds(10);
    IfEntityInoutsideRadiusOfEntity(MAIN, InsideOutsideState.Outside, X0_4, 10000, X8_4, 1);
    SetCharacterBackreadState(X0_4, false);
    ChangeCharacterEnableState(X0_4, Enabled);
    SetCharacterAnimationState(X0_4, Enabled);
    ForceAnimationPlayback(X0_4, 20010, false, false, false, 0, 1);
    WaitFixedTimeFrames(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005460, Restart, function(X0_4, X4_2, X6_2) {
    CreateNPCPart(X0_4, X4_2, NPCPartType.Part1, 100000, 1, 1, false, false);
    CreateNPCPart(X0_4, X6_2, NPCPartType.Part2, 100000, 1, 1, false, false);
});

Event(20005462, Restart, function(X0_4, X4_4, X8_4) {
    IfCharacterHasSpEffect(OR01, X0_4, 230645, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR01, X0_4, 230646, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, FAIL, OR01);
    SetNPCPartSEAndSFX(X0_4, X4_4, 109, 109);
    SetNPCPartSEAndSFX(X0_4, X8_4, 100, 100);
    SetSpEffect(X0_4, 300340);
    IfCharacterHasSpEffect(OR02, X0_4, 230645, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR02, X0_4, 230646, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR02);
    SetNPCPartSEAndSFX(X0_4, X4_4, 130, 130);
    SetNPCPartSEAndSFX(X0_4, X8_4, 100, 100);
    ClearSpEffect(X0_4, 300340);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005500, Default, function(X0_4, X4_4, X8_4, X12_4) {
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X0_4);
    DeactivateObject(X12_4, Disabled);
    ChangeCharacterEnableState(X8_4, Disabled);
    WaitFixedTimeSeconds(1);
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X0_4);
    SpawnOneshotSFX(TargetEntityType.Object, X12_4, 170, 1060);
    WaitFixedTimeSeconds(0.5);
    DeactivateObject(X12_4, Enabled);
    ChangeCharacterEnableState(X8_4, Enabled);
    WaitFixedTimeSeconds(0.1);
    WarpCharacterAndCopyFloor(X8_4, TargetEntityType.Object, X12_4, 100, X8_4);
    Label0();
    RegisterBonfire(X4_4, X12_4, 0, 0, 0);
});

Event(20005510, Restart, function(X0_4, X4_4, X8_4) {
    GotoIfEventFlag(Label.LABEL0, OFF, TargetEventFlagType.EventFlag, X0_4);
    ReproduceObjectAnimation(X4_4, 1);
    SetObjactState(X4_4, -1, Disabled);
    SetObjectTreasureState(X4_4, Enabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    SetObjectTreasureState(X4_4, Disabled);
    CreateObjectfollowingSFX(X4_4, 90, 800270);
    IfObjactEventFlag(MAIN, X8_4);
    DeleteObjectfollowingSFX(X4_4, true);
    WaitFixedTimeFrames(90);
    SetObjectTreasureState(X4_4, Enabled);
    SetEventFlag(X0_4, ON);
});

Event(20005511, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_1, X41_1, X42_1, X44_4) {
    DeactivateObject(X4_4, Disabled);
    SetObjectTreasureState(X4_4, Disabled);
    SetObjactState(X4_4, -1, Disabled);
    SkipIfComparison(3, ComparisonType.Equal, X16_4, 0);
    DeactivateObject(X16_4, Disabled);
    SetObjectTreasureState(X16_4, Disabled);
    SetObjactState(X16_4, -1, Disabled);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X12_4);
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X32_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X36_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X40_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X36_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(4, PASS, OR01);
    DeactivateObject(X4_4, Enabled);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X0_4);
    CreateObjectfollowingSFX(X4_4, 90, 800270);
    SetObjactState(X4_4, -1, Enabled);
    IfObjactEventFlag(AND05, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(MAIN, PASS, OR05);
    DeleteObjectfollowingSFX(X4_4, true);
    EndIfConditionGroupStateCompiled(EventEndType.Restart, FAIL, AND05);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeFrames(90);
    GotoUnconditionally(Label.LABEL2);
    Label1();
    ReproduceObjectAnimation(X4_4, 1);
    Label2();
    SetObjectTreasureState(X4_4, Enabled);
    SetEventFlag(X44_4, ON);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X12_4);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    EndIfEventFlag(EventEndType.Restart, OFF, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(2, ComparisonType.Equal, X24_4, 0);
    SetEventFlag(X24_4, ON);
    SetEventFlag(X44_4, OFF);
    EndUnconditionally(EventEndType.End);
    Label0();
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X32_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X36_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X40_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR01, X42_1, TargetEventFlagType.EventFlag, X36_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(4, PASS, OR01);
    DeactivateObject(X16_4, Enabled);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X0_4);
    CreateObjectfollowingSFX(X16_4, 90, 800270);
    SetObjactState(X16_4, -1, Enabled);
    IfObjactEventFlag(AND05, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(MAIN, PASS, OR05);
    DeleteObjectfollowingSFX(X16_4, true);
    EndIfConditionGroupStateCompiled(EventEndType.Restart, FAIL, AND05);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeFrames(90);
    GotoUnconditionally(Label.LABEL2);
    Label1();
    ReproduceObjectAnimation(X16_4, 1);
    Label2();
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X44_4);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X24_4);
    SetObjectTreasureState(X16_4, Enabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X24_4);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X24_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005512, Restart, function(X0_4, X4_4, X8_4) {
    GotoIfEventFlag(Label.LABEL0, OFF, TargetEventFlagType.EventFlag, X0_4);
    ReproduceObjectAnimation(X4_4, 1);
    SetObjactState(X4_4, -1, Disabled);
    SetObjectTreasureState(X4_4, Enabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    SetObjectTreasureState(X4_4, Disabled);
    CreateObjectfollowingSFX(X4_4, 90, 825160);
    IfObjactEventFlag(MAIN, X8_4);
    DeleteObjectfollowingSFX(X4_4, true);
    WaitFixedTimeFrames(100);
    SetObjectTreasureState(X4_4, Enabled);
    SetEventFlag(X0_4, ON);
});

Event(20005513, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_1, X41_1, X42_1, X44_4) {
    DeactivateObject(X4_4, Disabled);
    SetObjectTreasureState(X4_4, Disabled);
    SetObjactState(X4_4, -1, Disabled);
    SkipIfComparison(3, ComparisonType.Equal, X16_4, 0);
    DeactivateObject(X16_4, Disabled);
    SetObjectTreasureState(X16_4, Disabled);
    SetObjactState(X16_4, -1, Disabled);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X12_4);
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X32_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X36_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X40_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X36_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(4, PASS, OR01);
    DeactivateObject(X4_4, Enabled);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X0_4);
    CreateObjectfollowingSFX(X4_4, 90, 825160);
    SetObjactState(X4_4, -1, Enabled);
    IfObjactEventFlag(AND05, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(MAIN, PASS, OR05);
    DeleteObjectfollowingSFX(X4_4, true);
    EndIfConditionGroupStateCompiled(EventEndType.Restart, FAIL, AND05);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeFrames(100);
    GotoUnconditionally(Label.LABEL2);
    Label1();
    ReproduceObjectAnimation(X4_4, 1);
    Label2();
    SetObjectTreasureState(X4_4, Enabled);
    SetEventFlag(X44_4, ON);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X12_4);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    EndIfEventFlag(EventEndType.Restart, OFF, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(2, ComparisonType.Equal, X24_4, 0);
    SetEventFlag(X24_4, ON);
    SetEventFlag(X44_4, OFF);
    EndUnconditionally(EventEndType.End);
    Label0();
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X32_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X36_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X40_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR01, X42_1, TargetEventFlagType.EventFlag, X36_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(4, PASS, OR01);
    DeactivateObject(X16_4, Enabled);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X0_4);
    CreateObjectfollowingSFX(X16_4, 90, 825160);
    SetObjactState(X16_4, -1, Enabled);
    IfObjactEventFlag(AND05, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(MAIN, PASS, OR05);
    DeleteObjectfollowingSFX(X16_4, true);
    EndIfConditionGroupStateCompiled(EventEndType.Restart, FAIL, AND05);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeFrames(100);
    GotoUnconditionally(Label.LABEL2);
    Label1();
    ReproduceObjectAnimation(X16_4, 1);
    Label2();
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X44_4);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X24_4);
    SetObjectTreasureState(X16_4, Enabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X24_4);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X24_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005514, Restart, function(X0_4, X4_4, X8_4) {
    GotoIfEventFlag(Label.LABEL0, OFF, TargetEventFlagType.EventFlag, X0_4);
    ReproduceObjectAnimation(X4_4, 1);
    SetObjactState(X4_4, -1, Disabled);
    SetObjectTreasureState(X4_4, Enabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    SetObjectTreasureState(X4_4, Disabled);
    CreateObjectfollowingSFX(X4_4, 200, 800310);
    IfObjactEventFlag(MAIN, X8_4);
    DeleteObjectfollowingSFX(X4_4, true);
    WaitFixedTimeFrames(100);
    SetObjectTreasureState(X4_4, Enabled);
    SetEventFlag(X0_4, ON);
});

Event(20005515, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_1, X41_1, X42_1, X44_4) {
    DeactivateObject(X4_4, Disabled);
    SetObjectTreasureState(X4_4, Disabled);
    SetObjactState(X4_4, -1, Disabled);
    SkipIfComparison(3, ComparisonType.Equal, X16_4, 0);
    DeactivateObject(X16_4, Disabled);
    SetObjectTreasureState(X16_4, Disabled);
    SetObjactState(X16_4, -1, Disabled);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X12_4);
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X32_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X36_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X40_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X36_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(4, PASS, OR01);
    DeactivateObject(X4_4, Enabled);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X0_4);
    CreateObjectfollowingSFX(X4_4, 200, 800310);
    SetObjactState(X4_4, -1, Enabled);
    IfObjactEventFlag(AND05, X8_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(MAIN, PASS, OR05);
    DeleteObjectfollowingSFX(X4_4, true);
    EndIfConditionGroupStateCompiled(EventEndType.Restart, FAIL, AND05);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeFrames(100);
    GotoUnconditionally(Label.LABEL2);
    Label1();
    ReproduceObjectAnimation(X4_4, 1);
    Label2();
    SetObjectTreasureState(X4_4, Enabled);
    SetEventFlag(X44_4, ON);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X12_4);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    EndIfEventFlag(EventEndType.Restart, OFF, TargetEventFlagType.EventFlag, X12_4);
    SkipIfComparison(2, ComparisonType.Equal, X24_4, 0);
    SetEventFlag(X24_4, ON);
    SetEventFlag(X44_4, OFF);
    EndUnconditionally(EventEndType.End);
    Label0();
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X32_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X36_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X40_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR01, X41_1, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR01, X42_1, TargetEventFlagType.EventFlag, X36_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(4, PASS, OR01);
    DeactivateObject(X16_4, Enabled);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X0_4);
    CreateObjectfollowingSFX(X16_4, 200, 800310);
    SetObjactState(X16_4, -1, Enabled);
    IfObjactEventFlag(AND05, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR05, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(OR05, PASS, AND05);
    IfConditionGroup(MAIN, PASS, OR05);
    DeleteObjectfollowingSFX(X16_4, true);
    EndIfConditionGroupStateCompiled(EventEndType.Restart, FAIL, AND05);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeFrames(100);
    GotoUnconditionally(Label.LABEL2);
    Label1();
    ReproduceObjectAnimation(X16_4, 1);
    Label2();
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X44_4);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X24_4);
    SetObjectTreasureState(X16_4, Enabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X32_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X36_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X36_4);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X24_4);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X24_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005520, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_1, X33_1, X34_1, X35_1, X36_4) {
    DeactivateObject(X8_4, Disabled);
    SetObjectTreasureState(X8_4, Disabled);
    SkipIfComparison(2, ComparisonType.Equal, X12_4, 0);
    DeactivateObject(X12_4, Disabled);
    SetObjectTreasureState(X12_4, Disabled);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X0_4);
    IfParameterComparison(AND01, ComparisonType.Equal, X16_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X20_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X24_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR01, X32_1, TargetEventFlagType.EventFlag, X16_4);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(OR01, X33_1, TargetEventFlagType.EventFlag, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X24_4, 0);
    IfEventFlag(OR01, X34_1, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X35_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(3, PASS, OR01);
    DeactivateObject(X8_4, Enabled);
    SetObjectTreasureState(X8_4, Enabled);
    SetEventFlag(X36_4, ON);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X16_4);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X24_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X0_4);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    EndIfEventFlag(EventEndType.Restart, OFF, TargetEventFlagType.EventFlag, X0_4);
    SkipIfComparison(2, ComparisonType.Equal, X4_4, 0);
    SetEventFlag(X4_4, ON);
    SetEventFlag(X36_4, OFF);
    EndUnconditionally(EventEndType.End);
    Label0();
    IfParameterComparison(AND01, ComparisonType.Equal, X16_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X20_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X24_4, 0);
    IfParameterComparison(AND01, ComparisonType.Equal, X28_4, 0);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR01, X32_1, TargetEventFlagType.EventFlag, X16_4);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(OR01, X33_1, TargetEventFlagType.EventFlag, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X24_4, 0);
    IfEventFlag(OR01, X34_1, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR01, X35_1, TargetEventFlagType.EventFlag, X28_4);
    SkipIfConditionGroupStateUncompiled(1, PASS, AND01);
    SkipIfConditionGroupStateUncompiled(4, PASS, OR01);
    DeactivateObject(X12_4, Enabled);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X36_4);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X4_4);
    SetObjectTreasureState(X12_4, Enabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X16_4);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X20_4);
    SkipIfComparison(1, ComparisonType.Equal, X24_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Equal, X28_4, 0);
    IfEventFlag(OR15, CHANGE, TargetEventFlagType.EventFlag, X28_4);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(OR15, PASS, AND15);
    IfConditionGroup(MAIN, PASS, OR15);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X4_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005521, Restart, function(X0_4, X4_1) {
    IfGameCycle(AND01, ComparisonType.GreaterOrEqual, X4_1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND01);
    DeactivateObject(X0_4, Disabled);
    SetObjectTreasureState(X0_4, Disabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    DeactivateObject(X0_4, Enabled);
    SetObjectTreasureState(X0_4, Enabled);
});

Event(20005540, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    DeleteObjectEvent(X0_4);
    CreateDamagingObject(X0_4, X4_4, X8_4, X12_4, DamageTargetType.Character, X16_4, X20_4, X24_4);
});

Event(20005541, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4) {
    DeleteObjectfollowingSFX(X4_4, true);
    CreateObjectfollowingSFX(X4_4, X32_4, X28_4);
    DeleteObjectEvent(X0_4);
    CreateDamagingObject(X0_4, X4_4, X8_4, X12_4, DamageTargetType.Character, X16_4, X20_4, X24_4);
});

Event(20005542, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    DeleteObjectEvent(X0_4);
    EndIfObjectDestroyed(EventEndType.End, DestructionState.Destroyed, X4_4, ComparisonType.Equal, 1);
    CreateDamagingObject(X0_4, X4_4, X8_4, X12_4, DamageTargetType.Character, X16_4, X20_4, X24_4);
    IfObjectDestroyed(MAIN, DestructionState.Destroyed, X4_4, ComparisonType.Equal, 1);
    DeleteObjectEvent(X0_4);
});

Event(20005543, Restart, function(X0_4, X4_4) {
    EndIfObjectDestroyed(EventEndType.End, DestructionState.Destroyed, X0_4, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(MAIN, InsideOutsideState.Inside, 10000, X0_4, X4_4, 1);
    SetSpEffect(10000, 4010);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005545, Restart, function(X0_4, X4_4) {
    WaitFixedTimeFrames(1);
    EndIfObjectDestroyed(EventEndType.End, DestructionState.Destroyed, X0_4, ComparisonType.Equal, 1);
    IfDamageType(AND01, X0_4, -1, DamageType.Fire);
    IfConditionGroup(OR01, PASS, AND01);
    IfObjectHP(OR01, X0_4, ComparisonType.Less, 999, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, OR01);
    GotoIfConditionGroupStateCompiled(Label.LABEL0, FAIL, AND01);
    CreateBulletOwner(X4_4);
    SpawnOneshotSFX(TargetEntityType.Object, X0_4, 200, 811351);
    WaitFixedTimeSeconds(4);
    SpawnOneshotSFX(TargetEntityType.Object, X0_4, 200, 811352);
    ShootBullet(X4_4, X0_4, -1, 1000200, 0, 0, 0);
    WaitFixedTimeFrames(1);
    RequestObjectDestruction(X0_4, 1);
    EndUnconditionally(EventEndType.End);
    Label0();
    SpawnOneshotSFX(TargetEntityType.Object, X0_4, 200, 811350);
    RequestObjectDestruction(X0_4, 1);
    EndUnconditionally(EventEndType.End);
});

Event(20005546, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    WaitFixedTimeFrames(1);
    EndIfObjectDestroyed(EventEndType.End, DestructionState.Destroyed, X4_4, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND01, 10000, 100317, true, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND01, InsideOutsideState.Inside, 10000, X4_4, X0_4, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    RequestObjectDestruction(X4_4, 1);
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    RequestObjectDestruction(X8_4, 1);
    SkipIfComparison(1, ComparisonType.Equal, X12_4, 0);
    RequestObjectDestruction(X12_4, 1);
});

Event(20005550, Restart, function(X0_4, X4_4, X8_4) {
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X8_4, 1);
    ForceAnimationPlayback(X0_4, X4_4, false, true, false, 0, 1);
    EndUnconditionally(EventEndType.End);
    Label0();
    ReproduceObjectAnimation(X0_4, X4_4);
});

Event(20005551, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X8_4, 1);
    WaitRandomTimeSeconds(X12_4, X16_4);
    ForceAnimationPlayback(X0_4, X4_4, false, true, false, 0, 1);
    SkipIfComparison(1, ComparisonType.NotEqual, X20_4, 1);
    DeactivateObject(X0_4, Disabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    ReproduceObjectAnimation(X0_4, X4_4);
    SkipIfComparison(1, ComparisonType.NotEqual, X20_4, 1);
    DeactivateObject(X0_4, Disabled);
});

Event(20005552, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4) {
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X8_4, 1);
    SetAutogeneratedEventspecificEventFlag2Unknown200375(2, 1);
    WaitRandomTimeSeconds(X12_4, X16_4);
    ForceAnimationPlayback(X0_4, X4_4, false, true, false, 0, 1);
    EndUnconditionally(EventEndType.End);
    Label0();
    ReproduceObjectAnimation(X0_4, X4_4);
});

Event(20005553, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4) {
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    WaitRandomTimeSeconds(X16_4, X20_4);
    ForceAnimationPlayback(X0_4, X4_4, true, false, true, 0, 1);
    DeactivateObject(X0_4, Enabled);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X12_4, 1);
    SetAutogeneratedEventspecificEventFlag2Unknown200375(2, 1);
    WaitRandomTimeSeconds(X24_4, X28_4);
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    WaitFixedTimeSeconds(X32_4);
    DeactivateObject(X0_4, Disabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    ReproduceObjectAnimation(X0_4, X8_4);
    DeactivateObject(X0_4, Disabled);
});

Event(20005560, Restart, function(X0_4) {
    SetNetworkSyncState(Disabled);
    DeactivateObject(X0_4, Disabled);
    IfCharacterHasSpEffect(MAIN, 10000, 4100, true, ComparisonType.Equal, 1);
    DeactivateObject(X0_4, Enabled);
    IfCharacterHasSpEffect(MAIN, 10000, 4100, false, ComparisonType.Equal, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005570, Restart, function(X0_4) {
    SetNetworkSyncState(Disabled);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X0_4, 1);
    SetSpEffect(10000, 4051);
    SetSpEffect(10000, 4052);
    IfInoutsideArea(MAIN, InsideOutsideState.Outside, 10000, X0_4, 1);
    ClearSpEffect(10000, 4051);
    ClearSpEffect(10000, 4052);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005580, Restart, function(X0_4, X4_4, X8_4) {
    SkipIfComparison(1, ComparisonType.Equal, X8_4, 0);
    SkipIfEventFlag(3, OFF, TargetEventFlagType.EventFlag, X8_4);
    SetObjectInteraction(X0_4, ObjectInteractionType.Grapple, Disabled);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, 0);
    SetObjectInteraction(X0_4, X4_4, Enabled);
    SkipIfComparison(4, ComparisonType.Equal, X8_4, 0);
    SkipIfEventFlag(3, ON, TargetEventFlagType.EventFlag, X8_4);
    SetObjectInteraction(X0_4, ObjectInteractionType.Grapple, Enabled);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, 0);
    SetObjectInteraction(X0_4, X4_4, Disabled);
    EndIfComparison(EventEndType.End, ComparisonType.Equal, X8_4, 0);
    IfEventFlag(MAIN, CHANGE, TargetEventFlagType.EventFlag, X8_4);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005590, Restart, function(X0_4, X4_4, X8_1, X12_4, X16_4, X20_4, X24_1, X28_4, X32_4) {
    ActivateWallHug(X4_4, X8_1, X12_4, X16_4, X20_4, X24_1, X28_4, X32_4, Disabled);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X0_4, 1);
    ActivateWallHug(X4_4, X8_1, X12_4, X16_4, X20_4, X24_1, X28_4, X32_4, Enabled);
    IfInoutsideArea(MAIN, InsideOutsideState.Outside, 10000, X0_4, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005600, Restart, function(X0_4, X4_4, X8_4) {
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X0_4, 1);
    IfInoutsideArea(AND02, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfConditionGroup(OR01, PASS, AND01);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(AND03, PASS, OR01);
    IfCharacterHasSpEffect(AND03, 10000, 109013, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND03);
    GotoIfConditionGroupStateCompiled(Label.LABEL0, PASS, AND01);
    GotoIfConditionGroupStateCompiled(Label.LABEL1, PASS, AND02);
    Label0();
    ForceUseObjact(10000, X8_4, 90075, -1);
    GotoUnconditionally(Label.LABEL20);
    Label1();
    ForceUseObjact(10000, X8_4, 90076, -1);
    GotoUnconditionally(Label.LABEL20);
    Label20();
    WaitFixedTimeSeconds(3);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005601, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4) {
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X0_4, 1);
    IfCharacterHasSpEffect(AND01, 10000, 109013, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    SetCharacterGravity(10000, Disabled);
    ForceUseObjact(10000, X4_4, 90071, -1);
    WaitFixedTimeSeconds(1.8);
    SetSpEffect(10000, 4702);
    SetCharacterImmortality(10000, Enabled);
    SetMenuFade(FadeType.FadeOut, 0.5);
    WaitFixedTimeSeconds(1.8);
    IfGameIsLoading(MAIN);
    WarpCharacterAndSetFloor(10000, TargetEntityType.Object, X8_4, 100, X12_4);
    ForceAnimationPlayback(10000, 710000, false, false, false, 0, 1);
    ForceAnimationPlayback(X8_4, 2, false, false, false, 0, 1);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    SetEventFlag(X16_4, ON);
    WaitFixedTimeSeconds(1.2);
    SetMenuFade(FadeType.FadeIn, 1.5);
    SetCharacterGravity(10000, Enabled);
    WaitFixedTimeSeconds(2);
    ClearSpEffect(10000, 4702);
    SetCharacterImmortality(10000, Disabled);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005605, Restart, function(X0_4, X4_4, X8_4) {
    IfInoutsideArea(AND01, InsideOutsideState.Outside, 10000, X0_4, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.End, PASS, AND01);
    IssueShortWarpRequest(10000, TargetEntityType.Object, X4_4, X8_4);
    EndUnconditionally(EventEndType.End);
});

Event(20005610, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    IfActionButton(MAIN, X0_4, X4_4);
    ShowLargeInspectBox(X8_4, X12_4);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005614, Default, function(X0_4, X4_4, X8_4) {
    SetNetworkSyncState(Disabled);
    IfActionButton(OR01, X8_4, X0_4);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(MAIN, PASS, OR01);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X4_4);
    DisplayGenericDialog(10010161, PromptType.OKCANCEL, NumberofOptions.OneButton, -1, 3);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005615, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4) {
    GotoIfEventFlag(Label.LABEL0, OFF, TargetEventFlagType.EventFlag, X0_4);
    SetObjectInteraction(X4_4, ObjectInteractionType.Hug, Disabled);
    SetObjectInteraction(X4_4, ObjectInteractionType.Peek, Enabled);
    SetObjactState(X4_4, X8_4, Disabled);
    SetObjactState(X4_4, X12_4, Disabled);
    ReproduceObjectAnimation(X4_4, 1);
    IfObjectBackread(MAIN, X4_4, true, ComparisonType.Equal, 1);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    ActivateHitAndCreateNavimesh(X24_4, Disabled);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    ActivateHitAndCreateNavimesh(X28_4, Disabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    ActivateHitAndCreateNavimesh(X24_4, Enabled);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X28_4, 0);
    ActivateHitAndCreateNavimesh(X28_4, Enabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    SetObjectInteraction(X4_4, ObjectInteractionType.Hug, Enabled);
    SetObjectInteraction(X4_4, ObjectInteractionType.Peek, Disabled);
    IfObjactEventFlag(OR01, X16_4);
    IfObjactEventFlag(OR01, X20_4);
    IfConditionGroup(MAIN, PASS, OR01);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeSeconds(2);
    SetObjectInteraction(X4_4, ObjectInteractionType.Hug, Disabled);
    SetObjectInteraction(X4_4, ObjectInteractionType.Peek, Enabled);
    SetObjactState(X4_4, X8_4, Disabled);
    SetObjactState(X4_4, X12_4, Disabled);
    WaitFixedTimeSeconds(X32_4);
    IfPlayerIsLookingAtEntity(MAIN, false, X4_4, 10000, 300, 300);
    DeactivateObject(X4_4, Disabled);
    WaitFixedTimeFrames(1);
    DeactivateObject(X4_4, Enabled);
    EndUnconditionally(EventEndType.End);
});

Event(20005616, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    GotoIfEventFlag(Label.LABEL0, OFF, TargetEventFlagType.EventFlag, X0_4);
    SetObjectInteraction(X4_4, ObjectInteractionType.Hug, Disabled);
    SetObjectInteraction(X4_4, ObjectInteractionType.Peek, Enabled);
    SetObjactState(X4_4, X8_4, Disabled);
    IfObjectBackread(MAIN, X4_4, true, ComparisonType.Equal, 1);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    ActivateHitAndCreateNavimesh(X16_4, Disabled);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    ActivateHitAndCreateNavimesh(X20_4, Disabled);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    ActivateHitAndCreateNavimesh(X16_4, Enabled);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X20_4, 0);
    ActivateHitAndCreateNavimesh(X20_4, Enabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    SetObjectInteraction(X4_4, ObjectInteractionType.Hug, Enabled);
    SetObjectInteraction(X4_4, ObjectInteractionType.Peek, Disabled);
    IfObjactEventFlag(MAIN, X12_4);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeSeconds(2);
    SetObjectInteraction(X4_4, ObjectInteractionType.Hug, Disabled);
    SetObjectInteraction(X4_4, ObjectInteractionType.Peek, Enabled);
    SetObjactState(X4_4, X8_4, Disabled);
    WaitFixedTimeSeconds(X24_4);
    IfPlayerIsLookingAtEntity(MAIN, false, X4_4, 10000, 300, 300);
    DeactivateObject(X4_4, Disabled);
    WaitFixedTimeFrames(1);
    DeactivateObject(X4_4, Enabled);
    EndUnconditionally(EventEndType.End);
});

Event(20005620, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    SkipIfNumberOfClientsOfType(1, ClientType.Invader, ComparisonType.Equal, 0);
    SetEventFlag(X20_4, OFF);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X0_4);
    ForceAnimationPlayback(X8_4, 1, false, false, true, 0, 1);
    SetEventFlag(X4_4, OFF);
    SetObjactState(X12_4, -1, Disabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    ForceAnimationPlayback(X8_4, 0, false, false, true, 0, 1);
    SetEventFlag(X4_4, ON);
    SetObjactState(X16_4, -1, Disabled);
    EndUnconditionally(EventEndType.End);
});

Event(20005621, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4, X40_4, X44_4, X48_4, X52_4) {
    IfEventFlag(AND13, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(AND13, ON, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(OR15, PASS, AND13);
    IfEventFlag(AND14, OFF, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(AND14, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(OR15, PASS, AND14);
    IfConditionGroup(AND15, PASS, OR15);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, X36_4);
    GotoIfConditionGroupStateUncompiled(Label.LABEL9, PASS, AND15);
    GotoIfEventFlag(Label.LABEL2, ON, TargetEventFlagType.EventFlag, X4_4);
    SkipIfNumberOfClientsOfType(3, ClientType.Invader, ComparisonType.Equal, 0);
    SetObjactState(X20_4, -1, Enabled);
    SetObjactState(X52_4, -1, Enabled);
    SetObjactState(X12_4, -1, Disabled);
    SetObjactState(X48_4, -1, Disabled);
    IfObjactEventFlag(OR01, X24_4);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, X0_4);
    IfObjactEventFlag(AND03, X28_4);
    SkipIfComparison(1, ComparisonType.Equal, X44_4, 0);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, X44_4);
    IfConditionGroup(OR04, PASS, OR01);
    IfConditionGroup(OR04, PASS, OR02);
    IfConditionGroup(OR04, PASS, AND03);
    IfConditionGroup(MAIN, PASS, OR04);
    WaitFixedTimeFrames(100);
    SkipIfNumberOfClientsOfType(1, ClientType.Invader, ComparisonType.Equal, 0);
    SetObjactState(X20_4, -1, Disabled);
    SkipIfNumberOfClientsOfType(2, ClientType.Invader, ComparisonType.Equal, 0);
    SetNetworkconnectedEventFlag(X36_4, ON);
    SetNetworkconnectedEventFlag(X0_4, ON);
    SetEventFlag(X4_4, ON);
    GotoIfConditionGroupStateCompiled(Label.LABEL0, PASS, OR01);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X40_4);
    ForceAnimationPlayback(X8_4, 11, false, true, true, 0, 1);
    GotoUnconditionally(Label.LABEL1);
    Label0();
    SetNetworkconnectedEventFlag(X40_4, ON);
    WaitFixedTimeSeconds(2);
    ForceAnimationPlayback(X8_4, 11, false, true, true, 0, 1);
    SetNetworkconnectedEventFlag(X40_4, OFF);
    Label1();
    SetNetworkconnectedEventFlag(X36_4, OFF);
    EndUnconditionally(EventEndType.Restart);
    Label2();
    SkipIfNumberOfClientsOfType(2, ClientType.Invader, ComparisonType.Equal, 0);
    SetObjactState(X12_4, -1, Enabled);
    SetObjactState(X48_4, -1, Enabled);
    SetObjactState(X20_4, -1, Disabled);
    SetObjactState(X52_4, -1, Disabled);
    IfObjactEventFlag(OR05, X16_4);
    IfEventFlag(OR06, OFF, TargetEventFlagType.EventFlag, X0_4);
    IfObjactEventFlag(AND07, X32_4);
    SkipIfComparison(1, ComparisonType.Equal, X44_4, 0);
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, X44_4);
    IfConditionGroup(OR08, PASS, OR05);
    IfConditionGroup(OR08, PASS, OR06);
    IfConditionGroup(OR08, PASS, AND07);
    IfConditionGroup(MAIN, PASS, OR08);
    WaitFixedTimeFrames(100);
    SkipIfNumberOfClientsOfType(1, ClientType.Invader, ComparisonType.Equal, 0);
    SetObjactState(X12_4, -1, Disabled);
    SkipIfNumberOfClientsOfType(2, ClientType.Invader, ComparisonType.Equal, 0);
    SetNetworkconnectedEventFlag(X36_4, ON);
    SetNetworkconnectedEventFlag(X0_4, OFF);
    SetEventFlag(X4_4, OFF);
    GotoIfConditionGroupStateCompiled(Label.LABEL3, PASS, OR05);
    GotoIfEventFlag(Label.LABEL3, ON, TargetEventFlagType.EventFlag, X40_4);
    ForceAnimationPlayback(X8_4, 10, false, true, true, 0, 1);
    GotoUnconditionally(Label.LABEL4);
    Label3();
    SetNetworkconnectedEventFlag(X40_4, ON);
    WaitFixedTimeSeconds(2);
    ForceAnimationPlayback(X8_4, 10, false, true, true, 0, 1);
    SetNetworkconnectedEventFlag(X40_4, OFF);
    Label4();
    SetNetworkconnectedEventFlag(X36_4, OFF);
    EndUnconditionally(EventEndType.Restart);
    Label9();
    IfEventFlag(MAIN, OFF, TargetEventFlagType.EventFlag, X36_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005820, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    DeactivateObject(X4_4, Disabled);
    DeleteObjectfollowingSFX(X4_4, true);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X12_4);
    IfParameterComparison(OR01, ComparisonType.Equal, X12_4, 0);
    IfConditionGroup(AND01, PASS, OR01);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X0_4);
    IfConditionGroup(MAIN, PASS, AND01);
    DeactivateObject(X4_4, Enabled);
    DeleteObjectfollowingSFX(X4_4, true);
    CreateObjectfollowingSFX(X4_4, 101, X8_4);
    IfEventFlag(OR05, ON, TargetEventFlagType.EventFlag, X12_4);
    IfParameterComparison(OR05, ComparisonType.Equal, X12_4, 0);
    IfConditionGroup(AND05, PASS, OR05);
    IfEventFlag(AND05, OFF, TargetEventFlagType.EventFlag, X0_4);
    IfConditionGroup(MAIN, FAIL, AND05);
    EndUnconditionally(EventEndType.Restart);
});

Event(2000581, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    DeactivateObject(X4_4, Disabled);
    DeleteObjectfollowingSFX(X4_4, true);
    IfCharacterDeadalive(AND01, X12_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterAIState(AND01, X12_4, AIStateType.Combat, ComparisonType.Equal, 1);
    IfConditionGroup(OR02, PASS, AND01);
    IfInoutsideArea(OR02, InsideOutsideState.Inside, 10000, X16_4, 1);
    IfConditionGroup(AND03, PASS, OR02);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, X0_4);
    IfConditionGroup(MAIN, PASS, AND03);
    DeactivateObject(X4_4, Enabled);
    DeleteObjectfollowingSFX(X4_4, true);
    WaitFixedTimeFrames(1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    CreateObjectfollowingSFX(X4_4, 101, X8_4);
    SkipIfComparison(4, ComparisonType.Greater, X20_4, 0);
    IfCharacterDeadalive(AND05, X12_4, DeathState.Alive, ComparisonType.Equal, 1);
    IfCharacterAIState(AND05, X12_4, AIStateType.Normal, ComparisonType.Equal, 1);
    IfInoutsideArea(AND05, InsideOutsideState.Outside, 10000, X16_4, 1);
    IfConditionGroup(OR05, PASS, AND05);
    IfEventFlag(OR05, ON, TargetEventFlagType.EventFlag, X0_4);
    IfConditionGroup(MAIN, PASS, OR05);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005825, Restart, function(X0_4, X4_4, X8_4) {
    ActivateHit(X4_4, Disabled);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X8_4);
    IfParameterComparison(OR01, ComparisonType.Equal, X8_4, 0);
    IfConditionGroup(AND01, PASS, OR01);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X0_4);
    IfConditionGroup(MAIN, PASS, AND01);
    ActivateHit(X4_4, Enabled);
    IfEventFlag(OR05, ON, TargetEventFlagType.EventFlag, X8_4);
    IfParameterComparison(OR05, ComparisonType.Equal, X8_4, 0);
    IfConditionGroup(AND05, PASS, OR05);
    IfEventFlag(AND05, OFF, TargetEventFlagType.EventFlag, X0_4);
    IfConditionGroup(MAIN, FAIL, AND05);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005830, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4) {
    SetMapSoundState(X12_4, Disabled);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    SetEventFlag(X16_4, OFF);
    IfParameterComparison(AND06, ComparisonType.Greater, X4_4, 1000000);
    IfParameterComparison(AND06, ComparisonType.Less, X4_4, 1000000);
    IfPlayerInoutMap(AND06, false, 10, 0);
    IfConditionGroup(OR06, PASS, AND06);
    IfParameterComparison(AND07, ComparisonType.Greater, X4_4, 1100000);
    IfParameterComparison(AND07, ComparisonType.Less, X4_4, 1110000);
    IfPlayerInoutMap(AND07, false, 11, 0);
    IfConditionGroup(OR06, PASS, AND07);
    IfParameterComparison(AND08, ComparisonType.Greater, X4_4, 1300000);
    IfParameterComparison(AND08, ComparisonType.Less, X4_4, 1400000);
    IfPlayerInoutMap(AND08, false, 13, 0);
    IfConditionGroup(OR06, PASS, AND08);
    IfParameterComparison(AND09, ComparisonType.Greater, X4_4, 1500000);
    IfParameterComparison(AND09, ComparisonType.Less, X4_4, 1600000);
    IfPlayerInoutMap(AND09, false, 15, 0);
    IfConditionGroup(OR06, PASS, AND09);
    IfParameterComparison(AND10, ComparisonType.Greater, X4_4, 1700000);
    IfParameterComparison(AND10, ComparisonType.Less, X4_4, 1800000);
    IfPlayerInoutMap(AND10, false, 17, 0);
    IfConditionGroup(OR06, PASS, AND10);
    IfParameterComparison(AND11, ComparisonType.Greater, X4_4, 2000000);
    IfParameterComparison(AND11, ComparisonType.Less, X4_4, 2100000);
    IfPlayerInoutMap(AND11, false, 20, 0);
    IfConditionGroup(OR06, PASS, AND11);
    IfParameterComparison(AND12, ComparisonType.Greater, X4_4, 2500000);
    IfParameterComparison(AND12, ComparisonType.Less, X4_4, 2500000);
    IfPlayerInoutMap(AND12, false, 25, 0);
    IfConditionGroup(OR06, PASS, AND12);
    IfParameterComparison(AND13, ComparisonType.Greater, X4_4, 1110000);
    IfParameterComparison(AND13, ComparisonType.Less, X4_4, 1120000);
    IfPlayerInoutMap(AND13, false, 11, 1);
    IfConditionGroup(OR06, PASS, AND13);
    IfParameterComparison(AND14, ComparisonType.Greater, X4_4, 1120000);
    IfParameterComparison(AND14, ComparisonType.Less, X4_4, 1130000);
    IfPlayerInoutMap(AND14, false, 11, 2);
    IfConditionGroup(OR06, PASS, AND14);
    GotoIfConditionGroupStateUncompiled(Label.LABEL6, PASS, OR06);
    IfInoutsideArea(AND02, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfEventFlag(AND02, OFF, TargetEventFlagType.EventFlag, 9207);
    IfConditionGroup(MAIN, PASS, AND02);
    SetEventFlag(9200, ON);
    WaitFixedTimeSeconds(1);
    IfInoutsideArea(AND01, InsideOutsideState.Outside, 10000, X4_4, 1);
    IfElapsedSeconds(AND01, 5);
    IfConditionGroup(OR01, PASS, AND01);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X8_4);
    IfConditionGroup(MAIN, PASS, OR01);
    GotoIfEventFlag(Label.LABEL1, OFF, TargetEventFlagType.EventFlag, X8_4);
    SetMapSoundStateUnknown(X12_4, true, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, X16_4);
    SkipIfComparison(1, ComparisonType.Greater, X16_4, 0);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, 9207);
    IfConditionGroup(MAIN, PASS, OR03);
    SetMapSoundStateUnknown(-1, false, true);
    EndIfEventFlag(EventEndType.Restart, ON, TargetEventFlagType.EventFlag, 9207);
    IfInoutsideArea(MAIN, InsideOutsideState.Outside, 10000, X4_4, 1);
    Label1();
    WaitFixedTimeSeconds(3);
    SkipIfEventFlag(1, ON, TargetEventFlagType.EventFlag, X0_4);
    SkipIfPlayerInoutsideArea(1, InsideOutsideState.Inside, 10000, X4_4, 1);
    SetEventFlag(9200, OFF);
    EndUnconditionally(EventEndType.Restart);
    Label6();
    SkipIfConditionGroupStateCompiled(1, FAIL, AND06);
    IfPlayerInoutMap(OR07, true, 10, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND07);
    IfPlayerInoutMap(OR07, true, 11, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND08);
    IfPlayerInoutMap(OR07, true, 13, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND09);
    IfPlayerInoutMap(OR07, true, 15, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND10);
    IfPlayerInoutMap(OR07, true, 17, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND11);
    IfPlayerInoutMap(OR07, true, 20, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND12);
    IfPlayerInoutMap(OR07, true, 25, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND13);
    IfPlayerInoutMap(OR07, true, 11, 1);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND14);
    IfPlayerInoutMap(OR07, true, 11, 2);
    IfConditionGroup(MAIN, PASS, OR07);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005831, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    SetMapSoundState(X12_4, Disabled);
    SetMapSoundState(X16_4, Disabled);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    SetEventFlag(X24_4, OFF);
    IfParameterComparison(AND06, ComparisonType.Greater, X4_4, 1000000);
    IfParameterComparison(AND06, ComparisonType.Less, X4_4, 1000000);
    IfPlayerInoutMap(AND06, false, 10, 0);
    IfConditionGroup(OR06, PASS, AND06);
    IfParameterComparison(AND07, ComparisonType.Greater, X4_4, 1100000);
    IfParameterComparison(AND07, ComparisonType.Less, X4_4, 1110000);
    IfPlayerInoutMap(AND07, false, 11, 0);
    IfConditionGroup(OR06, PASS, AND07);
    IfParameterComparison(AND08, ComparisonType.Greater, X4_4, 1300000);
    IfParameterComparison(AND08, ComparisonType.Less, X4_4, 1400000);
    IfPlayerInoutMap(AND08, false, 13, 0);
    IfConditionGroup(OR06, PASS, AND08);
    IfParameterComparison(AND09, ComparisonType.Greater, X4_4, 1500000);
    IfParameterComparison(AND09, ComparisonType.Less, X4_4, 1600000);
    IfPlayerInoutMap(AND09, false, 15, 0);
    IfConditionGroup(OR06, PASS, AND09);
    IfParameterComparison(AND10, ComparisonType.Greater, X4_4, 1700000);
    IfParameterComparison(AND10, ComparisonType.Less, X4_4, 1800000);
    IfPlayerInoutMap(AND10, false, 17, 0);
    IfConditionGroup(OR06, PASS, AND10);
    IfParameterComparison(AND11, ComparisonType.Greater, X4_4, 2000000);
    IfParameterComparison(AND11, ComparisonType.Less, X4_4, 2100000);
    IfPlayerInoutMap(AND11, false, 20, 0);
    IfConditionGroup(OR06, PASS, AND11);
    IfParameterComparison(AND12, ComparisonType.Greater, X4_4, 2500000);
    IfParameterComparison(AND12, ComparisonType.Less, X4_4, 2500000);
    IfPlayerInoutMap(AND12, false, 25, 0);
    IfConditionGroup(OR06, PASS, AND12);
    IfParameterComparison(AND13, ComparisonType.Greater, X4_4, 1110000);
    IfParameterComparison(AND13, ComparisonType.Less, X4_4, 1120000);
    IfPlayerInoutMap(AND13, false, 11, 1);
    IfConditionGroup(OR06, PASS, AND13);
    IfParameterComparison(AND14, ComparisonType.Greater, X4_4, 1120000);
    IfParameterComparison(AND14, ComparisonType.Less, X4_4, 1130000);
    IfPlayerInoutMap(AND14, false, 11, 2);
    IfConditionGroup(OR06, PASS, AND14);
    GotoIfConditionGroupStateUncompiled(Label.LABEL6, PASS, OR06);
    IfInoutsideArea(AND02, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfEventFlag(AND02, OFF, TargetEventFlagType.EventFlag, 9207);
    IfConditionGroup(MAIN, PASS, AND02);
    SetEventFlag(9200, ON);
    WaitFixedTimeSeconds(1);
    IfInoutsideArea(AND01, InsideOutsideState.Outside, 10000, X4_4, 1);
    IfElapsedSeconds(AND01, 5);
    IfConditionGroup(OR01, PASS, AND01);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X8_4);
    IfConditionGroup(MAIN, PASS, OR01);
    GotoIfEventFlag(Label.LABEL1, OFF, TargetEventFlagType.EventFlag, X8_4);
    SkipIfEventFlag(2, ON, TargetEventFlagType.EventFlag, X20_4);
    SetMapSoundStateUnknown(X12_4, true, false);
    WaitFixedTimeSeconds(5);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Greater, X24_4, 0);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, 9207);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, OR02);
    EndIfEventFlag(EventEndType.Restart, ON, TargetEventFlagType.EventFlag, 9207);
    GotoIfEventFlag(Label.LABEL2, ON, TargetEventFlagType.EventFlag, X0_4);
    SetMapSoundStateUnknown(X16_4, true, true);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X24_4, 0);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, X24_4);
    SkipIfComparison(1, ComparisonType.Greater, X24_4, 0);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, 9207);
    IfConditionGroup(MAIN, PASS, OR03);
    Label2();
    SetMapSoundStateUnknown(-1, false, true);
    EndIfEventFlag(EventEndType.Restart, ON, TargetEventFlagType.EventFlag, 9207);
    Label0();
    IfInoutsideArea(MAIN, InsideOutsideState.Outside, 10000, X4_4, 1);
    Label1();
    WaitFixedTimeSeconds(3);
    SkipIfEventFlag(1, ON, TargetEventFlagType.EventFlag, X0_4);
    SkipIfPlayerInoutsideArea(1, InsideOutsideState.Inside, 10000, X4_4, 1);
    SetEventFlag(9200, OFF);
    EndUnconditionally(EventEndType.Restart);
    Label6();
    SkipIfConditionGroupStateCompiled(1, FAIL, AND06);
    IfPlayerInoutMap(OR07, true, 10, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND07);
    IfPlayerInoutMap(OR07, true, 11, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND08);
    IfPlayerInoutMap(OR07, true, 13, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND09);
    IfPlayerInoutMap(OR07, true, 15, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND10);
    IfPlayerInoutMap(OR07, true, 17, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND11);
    IfPlayerInoutMap(OR07, true, 20, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND12);
    IfPlayerInoutMap(OR07, true, 25, 0);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND13);
    IfPlayerInoutMap(OR07, true, 11, 1);
    SkipIfConditionGroupStateCompiled(1, FAIL, AND14);
    IfPlayerInoutMap(OR07, true, 11, 2);
    IfConditionGroup(MAIN, PASS, OR07);
    WaitFixedTimeSeconds(1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20005840, Default, function(X0_4, X4_4) {
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X4_4);
    EndIfConditionGroupStateUncompiled(EventEndType.End, PASS, AND01);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(MAIN, PASS, OR01);
    SetEventFlag(X0_4, ON);
    SetEventFlag(X4_4, ON);
});

Event(20005841, Default, function(X0_4, X4_4, X8_4) {
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X8_4);
    EndIfConditionGroupStateUncompiled(EventEndType.End, PASS, OR01);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(MAIN, PASS, AND01);
    SetEventFlag(X8_4, ON);
});

Event(20005850, Restart, function(X0_4) {
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterAnimationState(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    Label0();
    IfCharacterBackreadStatus(MAIN, X0_4, true, ComparisonType.Equal, 1);
    ResetCharacterPosition(X0_4);
    IfCharacterBackreadStatus(MAIN, X0_4, false, ComparisonType.Equal, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006000, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X4_4);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X8_4);
    SetEventFlag(X12_4, OFF);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X8_4);
    IfCharacterHPRatio(AND01, X0_4, ComparisonType.Greater, 0, ComparisonType.Equal, 1);
    IfDamageType(AND02, X0_4, 10000, DamageType.Unspecified);
    IfCharacterHPRatio(AND02, X0_4, ComparisonType.Less, X16_4, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND02);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X12_4);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X4_4);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X8_4);
    SetCharacterTeamType(X0_4, TeamType.HostileNPC);
    ClearSpEffect(X0_4, 30200);
    ClearSpEffect(X0_4, 30601);
    ClearSpEffect(X0_4, 5301);
    ClearSpEffect(X0_4, 3742000);
    GotoIfComparison(Label.LABEL0, ComparisonType.Equal, 1, X28_4);
    BatchSetNetworkconnectedEventFlags(X20_4, X24_4, OFF);
    SetNetworkconnectedEventFlag(X4_4, ON);
    GotoUnconditionally(Label.LABEL9);
    Label0();
    BatchSetNetworkconnectedEventFlags(X20_4, X24_4, OFF);
    SetNetworkconnectedEventFlag(X8_4, ON);
    Label9();
    SaveRequest(0);
    WaitFixedTimeFrames(1);
    ForceCharacterTarget(X0_4, 10000);
    IfCharacterHasSpEffect(AND03, X0_4, 5450, true, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.End, FAIL, AND03);
    ForceAnimationPlayback(X0_4, 0, false, false, false, 0, 1);
});

Event(20006001, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    WaitFixedTimeFrames(1);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X8_4);
    IfConditionGroup(MAIN, PASS, AND01);
    GotoIfComparison(Label.LABEL0, ComparisonType.Equal, 9, X16_4);
    GotoIfComparison(Label.LABEL1, ComparisonType.Equal, 8, X16_4);
    GotoIfComparison(Label.LABEL2, ComparisonType.Equal, 7, X16_4);
    GotoIfComparison(Label.LABEL3, ComparisonType.Equal, 6, X16_4);
    GotoIfComparison(Label.LABEL4, ComparisonType.Equal, 5, X16_4);
    GotoIfComparison(Label.LABEL5, ComparisonType.Equal, 4, X16_4);
    GotoIfComparison(Label.LABEL6, ComparisonType.Equal, 3, X16_4);
    GotoIfComparison(Label.LABEL7, ComparisonType.Equal, 2, X16_4);
    GotoIfComparison(Label.LABEL8, ComparisonType.Equal, 1, X16_4);
    IfDamageType(AND02, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND02, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND02);
    WaitFixedTimeFrames(1);
    Label0();
    IfDamageType(AND03, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND03);
    WaitFixedTimeFrames(1);
    Label1();
    IfDamageType(AND04, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND04, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND04);
    WaitFixedTimeFrames(1);
    Label2();
    IfDamageType(AND05, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND05, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND05);
    WaitFixedTimeFrames(1);
    Label3();
    IfDamageType(AND06, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND06, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND06);
    WaitFixedTimeFrames(1);
    Label4();
    IfDamageType(AND07, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND07, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND07);
    WaitFixedTimeFrames(1);
    Label5();
    IfDamageType(AND08, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND08, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND08);
    WaitFixedTimeFrames(1);
    Label6();
    IfDamageType(AND09, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND09, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND09);
    WaitFixedTimeFrames(1);
    Label7();
    IfDamageType(AND10, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND10, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND10);
    WaitFixedTimeFrames(1);
    Label8();
    IfDamageType(AND11, X0_4, 10000, DamageType.Unspecified);
    SkipIfComparison(1, ComparisonType.Equal, 0, X20_4);
    IfEventFlag(AND11, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfConditionGroup(MAIN, PASS, AND11);
    SetEventFlag(X12_4, ON);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006002, Restart, function(X0_4, X4_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    IfCharacterDeadalive(OR01, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(OR01, X0_4, 220020, true, ComparisonType.Equal, 1);
    IfConditionGroup(AND01, PASS, OR01);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(MAIN, PASS, AND01);
    SetNetworkconnectedEventFlag(X4_4, ON);
    SaveRequest(0);
});

Event(20006003, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    SkipIfNumberOfClientsOfType(1, ClientType.Invader, ComparisonType.Equal, 0);
    SetEventFlag(X4_4, OFF);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X12_4);
    IfCharacterHPRatio(AND01, X0_4, ComparisonType.NotEqual, 0, ComparisonType.Equal, 1);
    IfPlayerIsNotInOwnWorldExcludesArena(AND01, false);
    IfConditionGroup(MAIN, PASS, AND01);
    GotoIfPlayerIsNotInOwnWorldExcludesArena(Label.LABEL10, true);
    SetEventFlag(X4_4, OFF);
    BatchSetNetworkconnectedEventFlags(X20_4, X24_4, OFF);
    SetNetworkconnectedEventFlag(X16_4, ON);
    SaveRequest(0);
    Label10();
    SetCharacterInvincibility(X0_4, Enabled);
    SetCharacterAnimationState(X0_4, Disabled);
    WaitFixedTimeSeconds(0.5);
    SkipIfNumberOfClientsOfType(1, ClientType.Invader, ComparisonType.Equal, 0);
    SetSpEffect(X0_4, 4640);
    WaitFixedTimeSeconds(5);
    ChangeCharacterEnableState(X0_4, Disabled);
    SetCharacterBackreadState(X0_4, true);
});

Event(20006004, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SetEventFlag(X4_4, OFF);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X12_4);
    IfCharacterHPRatio(AND01, X0_4, ComparisonType.NotEqual, 0, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND01, X0_4, X32_4, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    SetEventFlag(X4_4, OFF);
    BatchSetNetworkconnectedEventFlags(X24_4, X28_4, OFF);
    SetNetworkconnectedEventFlag(X16_4, ON);
    SaveRequest(0);
    ForceAnimationPlayback(X0_4, X20_4, false, true, false, 0, 1);
    ChangeCharacterEnableState(X0_4, Disabled);
    SetCharacterBackreadState(X0_4, true);
});

Event(20006005, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4) {
    SetNetworkSyncState(Disabled);
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X4_4);
    GotoIfComparison(Label.LABEL0, ComparisonType.NotEqual, X12_4, 0);
    IfEntityInoutsideRadiusOfEntity(AND01, InsideOutsideState.Inside, 10000, X0_4, X16_4, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL9, PASS, AND01);
    RotateCharacter(10000, X0_4, 69070, false);
    WaitFixedTimeFrames(1);
    IfEntityInoutsideRadiusOfEntity(OR01, InsideOutsideState.Inside, 10000, X0_4, X16_4, 1);
    GotoUnconditionally(Label.LABEL8);
    Label0();
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X12_4, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL9, PASS, AND01);
    RotateCharacter(10000, X12_4, 69070, false);
    WaitFixedTimeFrames(1);
    IfInoutsideArea(OR01, InsideOutsideState.Inside, 10000, X12_4, 1);
    GotoUnconditionally(Label.LABEL8);
    Label8();
    IfCharacterHasSpEffect(AND02, 10000, 150, false, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND02);
    IfEventFlag(OR02, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfElapsedFrames(OR02, 89);
    IfConditionGroup(OR01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, OR01);
    GotoIfConditionGroupStateCompiled(Label.LABEL20, PASS, AND02);
    GotoIfConditionGroupStateCompiled(Label.LABEL19, PASS, OR02);
    Label9();
    RotateCharacter(10000, X0_4, X20_4, true);
    WaitFixedTimeFrames(1);
    SetEventFlag(X8_4, ON);
    IfEventFlag(OR03, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfCharacterHasSpEffect(AND03, 10000, 150, false, ComparisonType.Equal, 1);
    IfConditionGroup(OR03, PASS, AND03);
    IfConditionGroup(MAIN, PASS, OR03);
    GotoIfConditionGroupStateCompiled(Label.LABEL20, PASS, AND03);
    GotoIfComparison(Label.LABEL10, ComparisonType.Equal, X28_4, -1);
    IfCharacterHasSpEffect(OR04, 10000, X28_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND04, 10000, 150, false, ComparisonType.Equal, 1);
    IfConditionGroup(OR04, PASS, AND04);
    IfConditionGroup(MAIN, PASS, OR04);
    GotoIfConditionGroupStateCompiled(Label.LABEL20, PASS, AND04);
    Label10();
    SetEventFlag(X8_4, OFF);
    ForceAnimationPlayback(10000, X24_4, false, true, false, 0, 1);
    EndUnconditionally(EventEndType.Restart);
    Label19();
    ForceAnimationPlayback(10000, 0, false, false, false, 0, 1);
    SetEventFlag(X4_4, OFF);
    EndUnconditionally(EventEndType.Restart);
    Label20();
    SetEventFlag(X4_4, OFF);
    SetEventFlag(X8_4, OFF);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006006, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    SetNetworkSyncState(Disabled);
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X4_4);
    SetEventFlag(X8_4, ON);
    GotoIfComparison(Label.LABEL0, ComparisonType.Equal, X20_4, 1);
    ForceAnimationPlayback(X0_4, X12_4, false, false, false, 0, 1);
    GotoUnconditionally(Label.LABEL20);
    Label0();
    RotateCharacter(X0_4, 10000, X12_4, true);
    Label20();
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfCharacterHasSpEffect(AND01, X0_4, 155, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND01);
    IfCharacterHasSpEffect(OR02, X0_4, 150, true, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, OR02);
    IfConditionGroup(MAIN, PASS, OR01);
    SkipIfConditionGroupStateCompiled(2, FAIL, OR02);
    SetEventFlag(X8_4, OFF);
    EndUnconditionally(EventEndType.Restart);
    ForceAnimationPlayback(X0_4, X16_4, false, true, false, 0, 1);
    SetEventFlag(X8_4, OFF);
    WaitFixedTimeSeconds(X24_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006007, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4, X28_4, X32_4, X36_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X4_4);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X8_4);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, X32_4, X36_4);
    SetEventFlag(X12_4, OFF);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X8_4);
    IfCharacterHPRatio(AND01, X0_4, ComparisonType.Greater, 0, ComparisonType.Equal, 1);
    IfDamageType(AND02, X0_4, 10000, DamageType.Unspecified);
    IfCharacterHPRatio(AND02, X0_4, ComparisonType.Less, X16_4, ComparisonType.Equal, 1);
    IfConditionGroup(OR01, PASS, AND02);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X12_4);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X4_4);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X8_4);
    SetCharacterTeamType(X0_4, TeamType.HostileNPC);
    ClearSpEffect(X0_4, 30200);
    ClearSpEffect(X0_4, 5301);
    ClearSpEffect(X0_4, 30601);
    GotoIfComparison(Label.LABEL0, ComparisonType.Equal, 1, X28_4);
    BatchSetNetworkconnectedEventFlags(X20_4, X24_4, OFF);
    SetNetworkconnectedEventFlag(X4_4, ON);
    GotoUnconditionally(Label.LABEL9);
    Label0();
    BatchSetNetworkconnectedEventFlags(X20_4, X24_4, OFF);
    SetNetworkconnectedEventFlag(X8_4, ON);
    Label9();
    SaveRequest(0);
    WaitFixedTimeFrames(1);
    ForceCharacterTarget(X0_4, 10000);
    IfCharacterHasSpEffect(AND03, X0_4, 5450, true, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.End, FAIL, AND03);
    ForceAnimationPlayback(X0_4, 0, false, false, false, 0, 1);
});

Event(20006010, Default, function(X0_4, X4_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SetEventFlag(X0_4, OFF);
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X0_4);
    ForceAnimationPlayback(10000, X4_4, false, true, false, 0, 1);
    SetEventFlag(X0_4, OFF);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006011, Default, function(X0_4, X4_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SetEventFlag(X0_4, OFF);
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X0_4);
    SpawnOneshotSFX(TargetEntityType.Character, 10000, 200, X4_4);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006020, Default, function(X0_4, X4_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(MAIN, PASS, AND01);
    SetEventFlag(X0_4, OFF);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006030, Default, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X24_4);
    IfBatchEventFlags(AND01, LogicalOperationType.NotAllON, TargetEventFlagType.EventFlag, X16_4, X20_4);
    IfConditionGroup(MAIN, PASS, AND01);
    GotoIfComparison(Label.LABEL1, ComparisonType.Equal, 1, X8_4);
    GotoIfComparison(Label.LABEL2, ComparisonType.Equal, 2, X8_4);
    CreateObjectfollowingSFX(X0_4, 90, 60);
    GotoUnconditionally(Label.LABEL20);
    Label1();
    CreateObjectfollowingSFX(X0_4, 90, 61);
    GotoUnconditionally(Label.LABEL20);
    Label2();
    CreateObjectfollowingSFX(X0_4, 90, 62);
    Label20();
    IfActionButton(MAIN, X4_4, X0_4);
    ForceAnimationPlayback(10000, 60070, false, false, false, 0, 1);
    AwardItemLot(X12_4);
    DeleteObjectfollowingSFX(X0_4, true);
});

Event(20006031, Default, function(X0_4, X4_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SetEventFlag(X0_4, OFF);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X4_4, 1);
    SetEventFlag(X0_4, ON);
    WaitFixedTimeSeconds(1);
    IfInoutsideArea(AND01, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfConditionGroup(MAIN, FAIL, AND01);
    SetEventFlag(X0_4, OFF);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006032, Default, function(X0_4, X4_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, X0_4);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X4_4, 1);
    SetEventFlag(X0_4, ON);
});

Event(20006035, Default, function(X0_4, X4_4, X8_4, X12_4) {
    IfEntityInoutsideRadiusOfEntity(MAIN, InsideOutsideState.Inside, 10000, X0_4, X8_4, 1);
    RequestAnimationPlayback(X0_4, X4_4, false, false, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(MAIN, InsideOutsideState.Outside, 10000, X0_4, X12_4, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006040, Default, function(X0_4, X4_4, X8_4) {
    IfPlayerIsNotInOwnWorldExcludesArena(AND01, false);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfCharacterHasSpEffect(AND01, X0_4, X8_4, true, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    WarpCharacterAndCopyFloor(X0_4, TargetEntityType.Area, X4_4, -1, X0_4);
    IfPlayerIsNotInOwnWorldExcludesArena(AND02, false);
    IfCharacterBackreadStatus(AND02, X0_4, false, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND02);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006041, Restart, function(X0_4, X4_4) {
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    IfCharacterBackreadStatus(AND01, X0_4, true, ComparisonType.Equal, 1);
    IfObjectBackread(AND01, X4_4, true, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND01, InsideOutsideState.Inside, 10000, X4_4, 20, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    WaitFixedTimeSeconds(0.1);
    IfObjectBackread(AND02, X4_4, true, ComparisonType.Equal, 1);
    EndIfConditionGroupStateUncompiled(EventEndType.Restart, FAIL, AND02);
    WarpCharacterAndCopyFloor(X0_4, TargetEntityType.Object, X4_4, 100, X0_4);
    IfCharacterBackreadStatus(MAIN, X0_4, false, ComparisonType.Equal, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006042, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    ForceAnimationPlayback(X0_4, X4_4, false, false, false, 0, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    SetCharacterInvincibility(X0_4, Enabled);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X12_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    EndUnconditionally(EventEndType.End);
});

Event(20006051, Restart, function(X0_4, X4_4) {
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, X0_4, X4_4, 1);
    SetSpEffect(X0_4, 4500);
    IfInoutsideArea(MAIN, InsideOutsideState.Outside, X0_4, X4_4, 1);
    ClearSpEffect(X0_4, 4500);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006053, Restart, function(X0_4) {
    SetEventFlag(X0_4, OFF);
    EndUnconditionally(EventEndType.End);
});

Event(20006060, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    ChangeCharacterEnableState(X0_4, Disabled);
    SetCharacterBackreadState(X0_4, true);
    SkipIfComparison(2, ComparisonType.LessOrEqual, X20_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X4_4);
    ChangeCharacterEnableState(X0_4, Enabled);
    SetCharacterBackreadState(X0_4, false);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X12_4, -1);
    ForceAnimationPlayback(X0_4, X12_4, false, false, false, 0, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X16_4, 0);
    SetCharacterInvincibility(X0_4, Enabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    GotoIfComparison(Label.LABEL10, ComparisonType.Greater, X8_4, 0);
    ForceCharacterTreasure(X0_4);
    EndUnconditionally(EventEndType.End);
    Label10();
    ChangeCharacterEnableState(X0_4, Enabled);
    SetCharacterBackreadState(X0_4, false);
    EzstateInstructionRequest(X0_4, X8_4, 0);
    ForceCharacterTreasure(X0_4);
    EndUnconditionally(EventEndType.End);
});

Event(20006061, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    SkipIfComparison(2, ComparisonType.LessOrEqual, X12_4, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    IfCharacterHPRatio(AND01, X0_4, ComparisonType.Equal, 0, ComparisonType.Equal, 1);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND01);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X4_4, -1);
    ForceAnimationPlayback(X0_4, X4_4, false, false, false, 0, 1);
    SkipIfComparison(1, ComparisonType.LessOrEqual, X8_4, 0);
    SetCharacterInvincibility(X0_4, Enabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    ChangeCharacterEnableState(X0_4, Disabled);
    SetCharacterBackreadState(X0_4, true);
    EndUnconditionally(EventEndType.End);
});

Event(20006070, Restart, function(X0_4, X4_4) {
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X4_4);
    SetEventFlag(X4_4, OFF);
    SetSpEffect(X0_4, 30600);
    IfCharacterHasSpEffect(MAIN, X0_4, 30600, true, ComparisonType.Equal, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006090, Default, function(X0_4, X4_4, X8_4) {
    SetEventFlag(71110119, OFF);
    IfCharacterHasSpEffect(AND01, 10000, 32901, true, ComparisonType.Equal, 1);
    IfEntityInoutsideRadiusOfEntity(AND01, InsideOutsideState.Inside, 10000, X0_4, 15, 1);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, 70002020);
    IfConditionGroup(MAIN, PASS, AND01);
    SetEventFlag(71110119, ON);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006100, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1000, 1014);
    BatchSetNetworkconnectedEventFlags(1000, 1014, OFF);
    SetNetworkconnectedEventFlag(1000, ON);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 1000);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 8302);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND10);
    BatchSetNetworkconnectedEventFlags(1000, 1014, OFF);
    SetNetworkconnectedEventFlag(1001, ON);
});

Event(20006101, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1120, 1134);
    BatchSetNetworkconnectedEventFlags(1120, 1134, OFF);
    SetNetworkconnectedEventFlag(1120, ON);
    IfEventFlag(AND02, OFF, TargetEventFlagType.EventFlag, 1122);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1159);
    SkipIfConditionGroupStateUncompiled(4, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1120, 1134, OFF);
    SetNetworkconnectedEventFlag(1122, ON);
    SetNetworkconnectedEventFlag(1139, ON);
    SetNetworkconnectedEventFlag(1179, ON);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 8302);
    IfEventFlag(AND04, OFF, TargetEventFlagType.EventFlag, 1139);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND04);
    SetNetworkconnectedEventFlag(1139, ON);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1120);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 1139);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 1159);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1160);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 1179);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 1199);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 70002010);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 71100337);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 9302);
    SkipIfConditionGroupStateUncompiled(5, FAIL, AND03);
    BatchSetNetworkconnectedEventFlags(1120, 1134, OFF);
    SetNetworkconnectedEventFlag(1121, ON);
    SetNetworkconnectedEventFlag(1139, ON);
    BatchSetNetworkconnectedEventFlags(1160, 1174, OFF);
    SetNetworkconnectedEventFlag(1161, ON);
});

Event(20006102, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1140, 1154);
    BatchSetNetworkconnectedEventFlags(1140, 1154, OFF);
    SetNetworkconnectedEventFlag(1140, ON);
});

Event(20006103, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1160, 1174);
    BatchSetNetworkconnectedEventFlags(1160, 1174, OFF);
    SetNetworkconnectedEventFlag(1160, ON);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1160);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1139);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND01);
    SetNetworkconnectedEventFlag(1179, ON);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 8302);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 1179);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND03);
    SetNetworkconnectedEventFlag(1179, ON);
    IfEventFlag(AND02, OFF, TargetEventFlagType.EventFlag, 1162);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1199);
    SkipIfConditionGroupStateUncompiled(6, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1160, 1174, OFF);
    SetNetworkconnectedEventFlag(1162, ON);
    SetNetworkconnectedEventFlag(1179, ON);
});

Event(20006104, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1180, 1194);
    BatchSetNetworkconnectedEventFlags(1180, 1194, OFF);
    SetNetworkconnectedEventFlag(1180, ON);
});

Event(20006105, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 8310);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1200, 1214);
    BatchSetNetworkconnectedEventFlags(1200, 1214, OFF);
    SetNetworkconnectedEventFlag(1200, ON);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1200);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, 1219);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 71100283);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1441);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1459);
    SkipIfConditionGroupStateUncompiled(3, FAIL, AND01);
    SkipIfEventFlag(1, OFF, TargetEventFlagType.EventFlag, 70002015);
    SetEventFlag(1219, ON);
    SetEventFlag(1216, ON);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 71100280, 71100283);
    BatchSetEventFlags(71100280, 71100286, OFF);
    SetEventFlag(71100280, ON);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1200);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 1219);
    IfBatchEventFlags(AND03, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1215, 1216);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 71100250);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 71100280);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND03);
    BatchSetEventFlags(71100280, 71100286, OFF);
    SetEventFlag(71100281, ON);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 1200);
    IfEventFlag(AND04, OFF, TargetEventFlagType.EventFlag, 1219);
    IfBatchEventFlags(AND04, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1215, 1216);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 71100260);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 71100281);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND04);
    BatchSetEventFlags(71100280, 71100286, OFF);
    SetEventFlag(71100282, ON);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 1200);
    IfEventFlag(AND05, OFF, TargetEventFlagType.EventFlag, 1219);
    IfBatchEventFlags(AND05, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1215, 1216);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 72009001);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 71100282);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 1440);
    IfBatchEventFlags(AND05, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1455, 1456);
    IfEventFlag(AND05, OFF, TargetEventFlagType.EventFlag, 1459);
    SkipIfConditionGroupStateUncompiled(4, FAIL, AND05);
    BatchSetEventFlags(71100280, 71100286, OFF);
    SetEventFlag(71100283, ON);
    BatchSetEventFlags(1440, 1454, OFF);
    SetEventFlag(1441, ON);
    IfEventFlag(AND06, OFF, TargetEventFlagType.EventFlag, 1202);
    IfEventFlag(AND06, ON, TargetEventFlagType.EventFlag, 1239);
    GotoIfConditionGroupStateUncompiled(Label.LABEL1, FAIL, AND06);
    BatchSetEventFlags(1200, 1214, OFF);
    SetEventFlag(1202, ON);
    SetEventFlag(1219, ON);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, 1441);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, 1445);
    GotoIfConditionGroupStateUncompiled(Label.LABEL1, FAIL, OR01);
    BatchSetEventFlags(1440, 1454, OFF);
    SetEventFlag(1447, ON);
    SetEventFlag(1459, ON);
    Label1();
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, 1200);
    IfEventFlag(AND07, OFF, TargetEventFlagType.EventFlag, 1219);
    IfBatchEventFlags(AND07, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1215, 1216);
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, 8302);
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, 71100283);
    SkipIfConditionGroupStateUncompiled(5, FAIL, AND07);
    BatchSetNetworkconnectedEventFlags(1200, 1214, OFF);
    SetNetworkconnectedEventFlag(1201, ON);
    BatchSetNetworkconnectedEventFlags(1440, 1454, OFF);
    SetNetworkconnectedEventFlag(1445, ON);
    SetEventFlag(1459, ON);
    IfEventFlag(AND08, ON, TargetEventFlagType.EventFlag, 1200);
    IfEventFlag(AND08, ON, TargetEventFlagType.EventFlag, 8302);
    IfEventFlag(OR03, OFF, TargetEventFlagType.EventFlag, 71100283);
    IfBatchEventFlags(OR03, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1215, 1216);
    IfConditionGroup(AND08, PASS, OR03);
    GotoIfConditionGroupStateUncompiled(Label.LABEL2, FAIL, AND08);
    BatchSetNetworkconnectedEventFlags(1200, 1214, OFF);
    SetNetworkconnectedEventFlag(1214, ON);
    SetNetworkconnectedEventFlag(1219, ON);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, 1441);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, 1445);
    GotoIfConditionGroupStateUncompiled(Label.LABEL2, FAIL, OR02);
    BatchSetEventFlags(1440, 1454, OFF);
    SetEventFlag(1447, ON);
    SetEventFlag(1459, ON);
    Label2();
});

Event(20006106, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1220, 1234);
    BatchSetNetworkconnectedEventFlags(1220, 1234, OFF);
    SetNetworkconnectedEventFlag(1220, ON);
});

Event(20006107, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, 9308);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND01);
    BatchSetNetworkconnectedEventFlags(1355, 1356, OFF);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1340, 1354);
    BatchSetNetworkconnectedEventFlags(1340, 1354, OFF);
    SetNetworkconnectedEventFlag(1340, ON);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 9303);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 8301);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND10);
    BatchSetNetworkconnectedEventFlags(1340, 1354, OFF);
    SetNetworkconnectedEventFlag(1341, ON);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 9308);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND11);
    BatchSetNetworkconnectedEventFlags(1340, 1354, OFF);
    SetNetworkconnectedEventFlag(1342, ON);
});

Event(20006108, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1259);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND01);
    SetEventFlag(1259, OFF);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1240, 1254);
    BatchSetNetworkconnectedEventFlags(1240, 1254, OFF);
    SetNetworkconnectedEventFlag(1240, ON);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 1240);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 71000101);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND10);
    BatchSetNetworkconnectedEventFlags(1240, 1254, OFF);
    SetNetworkconnectedEventFlag(1241, ON);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 9308);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 9302);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND11);
    BatchSetNetworkconnectedEventFlags(1240, 1254, OFF);
    SetNetworkconnectedEventFlag(1242, ON);
});

Event(20006109, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1319);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND01);
    SetEventFlag(1319, OFF);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1300, 1314);
    BatchSetNetworkconnectedEventFlags(1300, 1314, OFF);
    SetNetworkconnectedEventFlag(1300, ON);
});

Event(20006110, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SetEventFlag(71120110, ON);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1039);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND01);
    SetNetworkconnectedEventFlag(1039, OFF);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1020, 1034);
    BatchSetNetworkconnectedEventFlags(1020, 1034, OFF);
    SetNetworkconnectedEventFlag(1020, ON);
    IfEventFlag(AND12, ON, TargetEventFlagType.EventFlag, 1022);
    IfEventFlag(AND12, ON, TargetEventFlagType.EventFlag, 8301);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND12);
    BatchSetNetworkconnectedEventFlags(1020, 1034, OFF);
    SetNetworkconnectedEventFlag(1026, ON);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, 1025);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, 8302);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND15);
    BatchSetNetworkconnectedEventFlags(1020, 1034, OFF);
    SetNetworkconnectedEventFlag(1023, ON);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 71110062);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 71120140);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND05);
    SetNetworkconnectedEventFlag(71120140, OFF);
});

Event(20006111, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1040, 1054);
    BatchSetNetworkconnectedEventFlags(1040, 1054, OFF);
    SetNetworkconnectedEventFlag(1040, ON);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1040);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 72000361);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 72000362);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND01);
    BatchSetNetworkconnectedEventFlags(1040, 1054, OFF);
    SetNetworkconnectedEventFlag(1041, ON);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1041);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 72000015);
    IfPlayerHasdoesntHaveItem(AND02, ItemType.Goods, 9209, OwnershipState.Owns);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1040, 1054, OFF);
    SetNetworkconnectedEventFlag(1042, ON);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1042);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 72000017);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND03);
    BatchSetNetworkconnectedEventFlags(1040, 1054, OFF);
    SetNetworkconnectedEventFlag(1043, ON);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 1043);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 72000019);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 8415);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND04);
    BatchSetNetworkconnectedEventFlags(1040, 1054, OFF);
    SetNetworkconnectedEventFlag(1044, ON);
});

Event(20006112, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1360, 1374);
    BatchSetNetworkconnectedEventFlags(1360, 1374, OFF);
    SetNetworkconnectedEventFlag(1360, ON);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1379);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 70002020);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 1360);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 72000041);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 71110102);
    IfConditionGroup(OR10, PASS, AND11);
    IfEventFlag(OR10, ON, TargetEventFlagType.EventFlag, 8301);
    IfEventFlag(OR10, ON, TargetEventFlagType.EventFlag, 72000101);
    IfConditionGroup(AND10, PASS, OR10);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND10);
    BatchSetNetworkconnectedEventFlags(1360, 1374, OFF);
    SetNetworkconnectedEventFlag(1361, ON);
    IfEventFlag(AND12, ON, TargetEventFlagType.EventFlag, 1361);
    IfEventFlag(AND12, ON, TargetEventFlagType.EventFlag, 72000042);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND12);
    BatchSetNetworkconnectedEventFlags(1360, 1374, OFF);
    SetNetworkconnectedEventFlag(1363, ON);
});

Event(20006113, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1280, 1294);
    BatchSetNetworkconnectedEventFlags(1280, 1294, OFF);
    SetNetworkconnectedEventFlag(1280, ON);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1660, 1679);
    BatchSetNetworkconnectedEventFlags(1660, 1679, OFF);
    SetNetworkconnectedEventFlag(1660, ON);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1299);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 1281);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 8302);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND11);
    BatchSetNetworkconnectedEventFlags(1280, 1294, OFF);
    SetNetworkconnectedEventFlag(1282, ON);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, 1660);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, 71100505);
    IfEventFlag(AND15, ON, TargetEventFlagType.EventFlag, 8400);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND15);
    BatchSetNetworkconnectedEventFlags(1660, 1679, OFF);
    SetNetworkconnectedEventFlag(1661, ON);
    IfEventFlag(OR13, ON, TargetEventFlagType.EventFlag, 1660);
    IfEventFlag(OR13, ON, TargetEventFlagType.EventFlag, 1661);
    IfConditionGroup(AND14, PASS, OR13);
    IfEventFlag(OR14, ON, TargetEventFlagType.EventFlag, 8301);
    IfEventFlag(OR14, ON, TargetEventFlagType.EventFlag, 71100533);
    IfConditionGroup(AND14, PASS, OR14);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND14);
    BatchSetNetworkconnectedEventFlags(1660, 1679, OFF);
    SetNetworkconnectedEventFlag(1674, ON);
    IfEventFlag(AND12, ON, TargetEventFlagType.EventFlag, 8301);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND12);
    SetNetworkconnectedEventFlag(71110249, ON);
});

Event(20006114, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfEventFlag(1, OFF, TargetEventFlagType.EventFlag, 71100400);
    SetNetworkconnectedEventFlag(71100401, ON);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1260, 1274);
    BatchSetNetworkconnectedEventFlags(1260, 1274, OFF);
    SetNetworkconnectedEventFlag(1262, ON);
    IfEventFlag(AND13, ON, TargetEventFlagType.EventFlag, 1262);
    IfEventFlag(AND13, ON, TargetEventFlagType.EventFlag, 131);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND13);
    BatchSetNetworkconnectedEventFlags(1260, 1274, OFF);
    SetNetworkconnectedEventFlag(1260, ON);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 1263);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 71110165);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND10);
    BatchSetNetworkconnectedEventFlags(1260, 1274, OFF);
    SetNetworkconnectedEventFlag(1265, ON);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 1265);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 71110164);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND11);
    BatchSetNetworkconnectedEventFlags(1260, 1274, OFF);
    SetNetworkconnectedEventFlag(1268, ON);
    IfEventFlag(AND12, ON, TargetEventFlagType.EventFlag, 8302);
    SkipIfConditionGroupStateUncompiled(3, FAIL, AND12);
    BatchSetNetworkconnectedEventFlags(1260, 1274, OFF);
    SetNetworkconnectedEventFlag(1272, ON);
    BatchSetNetworkconnectedEventFlags(71100447, 71100449, OFF);
});

Event(20006115, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1380, 1394);
    BatchSetNetworkconnectedEventFlags(1380, 1394, OFF);
    SetNetworkconnectedEventFlag(1380, ON);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1399);
    GotoIfBatchEventFlags(Label.LABEL0, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1395, 1396);
    GotoIfBatchEventFlags(Label.LABEL0, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 70002045, 70002049);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 71110308);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1380);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 138);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1380, 1394, OFF);
    SetNetworkconnectedEventFlag(1381, ON);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 71110300);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 72000249);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1381);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND03);
    BatchSetNetworkconnectedEventFlags(1380, 1394, OFF);
    SetNetworkconnectedEventFlag(1382, ON);
    Label0();
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 1380);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 8301);
    IfBatchEventFlags(AND04, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1395, 1396);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND04);
    BatchSetNetworkconnectedEventFlags(1380, 1394, OFF);
    SetNetworkconnectedEventFlag(1381, ON);
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, 1380);
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, 8301);
    IfBatchEventFlags(AND07, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1395, 1396);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND07);
    SetNetworkconnectedEventFlag(1399, ON);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 8302);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 72000202);
    IfBatchEventFlags(AND05, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1380, 1382);
    IfBatchEventFlags(AND05, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1395, 1396);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND05);
    BatchSetNetworkconnectedEventFlags(1380, 1394, OFF);
    SetNetworkconnectedEventFlag(1383, ON);
    IfEventFlag(AND06, ON, TargetEventFlagType.EventFlag, 8302);
    IfEventFlag(OR01, OFF, TargetEventFlagType.EventFlag, 72000202);
    IfBatchEventFlags(OR01, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1395, 1396);
    IfConditionGroup(AND06, PASS, OR01);
    IfBatchEventFlags(AND06, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1380, 1382);
    SkipIfConditionGroupStateUncompiled(4, FAIL, AND06);
    BatchSetNetworkconnectedEventFlags(1380, 1394, OFF);
    SetNetworkconnectedEventFlag(1384, ON);
    SetNetworkconnectedEventFlag(1399, ON);
    SetNetworkconnectedEventFlag(50006140, ON);
});

Event(20006116, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1400, 1414);
    BatchSetNetworkconnectedEventFlags(1400, 1414, OFF);
    SetNetworkconnectedEventFlag(1400, ON);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1419);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1400);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 71500102);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND01);
    BatchSetNetworkconnectedEventFlags(1400, 1414, OFF);
    SetNetworkconnectedEventFlag(1401, ON);
});

Event(20006117, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1420, 1434);
    BatchSetNetworkconnectedEventFlags(1420, 1434, OFF);
    SetNetworkconnectedEventFlag(1427, ON);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1439);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 70002030);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 9300);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1427);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1420, 1434, OFF);
    SetNetworkconnectedEventFlag(1420, ON);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 71500192);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1579);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1420);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 71300048);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 71120150);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND03);
    BatchSetNetworkconnectedEventFlags(1420, 1434, OFF);
    SetNetworkconnectedEventFlag(1426, ON);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 1426);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 71300049);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 71120150);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND04);
    BatchSetNetworkconnectedEventFlags(1420, 1434, OFF);
    SetNetworkconnectedEventFlag(1421, ON);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 1421);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 11500200);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 71120150);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND05);
    BatchSetNetworkconnectedEventFlags(1420, 1434, OFF);
    SetNetworkconnectedEventFlag(1422, ON);
});

Event(20006118, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SetNetworkconnectedEventFlag(1076, OFF);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1060, 1074);
    BatchSetNetworkconnectedEventFlags(1060, 1074, OFF);
    SetNetworkconnectedEventFlag(1060, ON);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 1060);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 71100240);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND10);
    BatchSetNetworkconnectedEventFlags(1060, 1074, OFF);
    SetNetworkconnectedEventFlag(1061, ON);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 1061);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 71100245);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND11);
    BatchSetNetworkconnectedEventFlags(1060, 1074, OFF);
    SetNetworkconnectedEventFlag(1062, ON);
});

Event(20006119, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1440, 1454);
    BatchSetNetworkconnectedEventFlags(1440, 1454, OFF);
    SetNetworkconnectedEventFlag(1440, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1455, 1456);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1459);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1441);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1219);
    SkipIfConditionGroupStateUncompiled(3, FAIL, AND01);
    SkipIfEventFlag(1, OFF, TargetEventFlagType.EventFlag, 70002025);
    SetEventFlag(1459, ON);
    SetEventFlag(1456, ON);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, 70002025);
});

Event(20006120, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1460, 1474);
    BatchSetNetworkconnectedEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1460, ON);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 1424);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 1439);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 1440);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 1459);
    IfConditionGroup(OR02, PASS, AND10);
    IfConditionGroup(OR02, PASS, AND11);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, 1461);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, 1462);
    IfEventFlag(OR03, ON, TargetEventFlagType.EventFlag, 1463);
    IfConditionGroup(AND12, PASS, OR03);
    IfConditionGroup(AND12, PASS, OR02);
    SkipIfConditionGroupStateUncompiled(3, FAIL, AND12);
    SkipIfEventFlag(1, OFF, TargetEventFlagType.EventFlag, 70002035);
    SetNetworkconnectedEventFlag(1479, ON);
    SetNetworkconnectedEventFlag(1476, ON);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1479);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1475, 1476);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, 1420);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, 1421);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, 1426);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1460);
    IfConditionGroup(AND02, PASS, OR01);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 71500192);
    IfEventFlag(AND02, OFF, TargetEventFlagType.EventFlag, 1439);
    IfBatchEventFlags(AND02, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1435, 1436);
    SkipIfConditionGroupStateUncompiled(5, FAIL, AND02);
    BatchSetEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1461, ON);
    BatchSetEventFlags(1420, 1434, OFF);
    SetNetworkconnectedEventFlag(1424, ON);
    SetEventFlag(71110355, ON);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1460);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1440);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 72009002);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, 1459);
    IfBatchEventFlags(AND03, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1455, 1456);
    SkipIfConditionGroupStateUncompiled(5, FAIL, AND03);
    BatchSetEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1461, ON);
    BatchSetEventFlags(1440, 1454, OFF);
    SetNetworkconnectedEventFlag(1443, ON);
    SetEventFlag(71110356, ON);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 1461);
    IfEventFlag(AND04, ON, TargetEventFlagType.EventFlag, 71300056);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND04);
    BatchSetEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1462, ON);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 1462);
    IfEventFlag(AND05, ON, TargetEventFlagType.EventFlag, 71300058);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND05);
    BatchSetEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1463, ON);
    IfEventFlag(AND06, ON, TargetEventFlagType.EventFlag, 1463);
    IfEventFlag(AND06, ON, TargetEventFlagType.EventFlag, 71300062);
    IfEventFlag(AND06, ON, TargetEventFlagType.EventFlag, 1424);
    IfEventFlag(AND06, OFF, TargetEventFlagType.EventFlag, 1439);
    SkipIfConditionGroupStateUncompiled(5, FAIL, AND06);
    BatchSetEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1464, ON);
    BatchSetEventFlags(1420, 1434, OFF);
    SetNetworkconnectedEventFlag(1425, ON);
    SetNetworkconnectedEventFlag(1436, ON);
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, 1463);
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, 71300062);
    IfEventFlag(AND07, ON, TargetEventFlagType.EventFlag, 1443);
    IfEventFlag(AND07, OFF, TargetEventFlagType.EventFlag, 1459);
    SkipIfConditionGroupStateUncompiled(5, FAIL, AND07);
    BatchSetEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1464, ON);
    BatchSetEventFlags(1440, 1454, OFF);
    SetNetworkconnectedEventFlag(1444, ON);
    SetNetworkconnectedEventFlag(1456, ON);
    IfEventFlag(AND08, ON, TargetEventFlagType.EventFlag, 1464);
    IfEventFlag(AND08, ON, TargetEventFlagType.EventFlag, 71300063);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND08);
    BatchSetNetworkconnectedEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1465, ON);
    IfEventFlag(AND09, ON, TargetEventFlagType.EventFlag, 1465);
    IfEventFlag(AND09, ON, TargetEventFlagType.EventFlag, 71300066);
    SkipIfConditionGroupStateUncompiled(3, FAIL, AND09);
    BatchSetNetworkconnectedEventFlags(1460, 1474, OFF);
    SetNetworkconnectedEventFlag(1466, ON);
    SetNetworkconnectedEventFlag(1476, ON);
});

Event(20006121, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1480, 1494);
    BatchSetNetworkconnectedEventFlags(1480, 1494, OFF);
    SetNetworkconnectedEventFlag(1480, ON);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 1480);
    IfEventFlag(AND10, ON, TargetEventFlagType.EventFlag, 71110055);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND10);
    BatchSetNetworkconnectedEventFlags(1480, 1494, OFF);
    SetNetworkconnectedEventFlag(1481, ON);
    IfEventFlag(AND11, OFF, TargetEventFlagType.EventFlag, 1482);
    IfEventFlag(AND11, ON, TargetEventFlagType.EventFlag, 8400);
    SkipIfConditionGroupStateUncompiled(3, FAIL, AND11);
    BatchSetNetworkconnectedEventFlags(1480, 1494, OFF);
    SetNetworkconnectedEventFlag(1482, ON);
    SetNetworkconnectedEventFlag(1499, ON);
});

Event(20006122, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1580, 1594);
    BatchSetNetworkconnectedEventFlags(1580, 1594, OFF);
    SetNetworkconnectedEventFlag(1580, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1595, 1596);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1599);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 70002040, 70002044);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1580);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 71500043);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 71500000);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1580, 1594, OFF);
    SetNetworkconnectedEventFlag(1581, ON);
});

Event(20006123, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1600, 1614);
    BatchSetNetworkconnectedEventFlags(1600, 1614, OFF);
    SetNetworkconnectedEventFlag(1600, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1615, 1616);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1619);
    SkipIfEventFlag(2, OFF, TargetEventFlagType.EventFlag, 9370);
    BatchSetNetworkconnectedEventFlags(1600, 1614, OFF);
    SetNetworkconnectedEventFlag(1601, ON);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1601);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 72500002);
    SkipIfConditionGroupStateUncompiled(6, FAIL, AND01);
    BatchSetNetworkconnectedEventFlags(1600, 1614, OFF);
    SetNetworkconnectedEventFlag(1602, ON);
    SetNetworkconnectedEventFlag(1619, ON);
    SkipIfEventFlag(2, ON, TargetEventFlagType.EventFlag, 1759);
    BatchSetNetworkconnectedEventFlags(1740, 1754, OFF);
    SetNetworkconnectedEventFlag(1741, ON);
});

Event(20006124, Restart, function(X0_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1500, 1514);
    BatchSetNetworkconnectedEventFlags(1500, 1514, OFF);
    SetNetworkconnectedEventFlag(1500, ON);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1501);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    IfCharacterHPRatio(AND01, X0_4, ComparisonType.Greater, 0, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(3, FAIL, AND01);
    BatchSetNetworkconnectedEventFlags(1500, 1514, OFF);
    SetNetworkconnectedEventFlag(1500, ON);
    SetNetworkconnectedEventFlag(1519, OFF);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 11000300);
    IfBatchEventFlags(AND02, LogicalOperationType.AllOFF, TargetEventFlagType.EventFlag, 1515, 1516);
    IfEventFlag(AND02, OFF, TargetEventFlagType.EventFlag, 1519);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1500, 1514, OFF);
    SetNetworkconnectedEventFlag(1503, ON);
});

Event(20006125, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1560, 1574);
    BatchSetNetworkconnectedEventFlags(1560, 1574, OFF);
    SetNetworkconnectedEventFlag(1560, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1575, 1576);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1579);
});

Event(20006126, Restart, function(X0_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1620, 1634);
    BatchSetNetworkconnectedEventFlags(1620, 1634, OFF);
    SetNetworkconnectedEventFlag(1620, ON);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1621);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, 1639);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    IfCharacterHPRatio(AND03, X0_4, ComparisonType.Greater, 0, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND03);
    SetNetworkconnectedEventFlag(1639, OFF);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1635, 1636);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1639);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1620);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 9370);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 72508006);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND01);
    BatchSetNetworkconnectedEventFlags(1620, 1634, OFF);
    SetNetworkconnectedEventFlag(1621, ON);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1620);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 9370);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 72508007);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1620, 1634, OFF);
    SetNetworkconnectedEventFlag(1622, ON);
});

Event(20006127, Restart, function(X0_4) {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1640, 1654);
    BatchSetNetworkconnectedEventFlags(1640, 1654, OFF);
    SetNetworkconnectedEventFlag(1640, ON);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1641);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1659);
    SkipIfComparison(1, ComparisonType.Equal, X0_4, 0);
    IfCharacterHPRatio(AND01, X0_4, ComparisonType.Greater, 0, ComparisonType.Equal, 1);
    SkipIfConditionGroupStateUncompiled(1, FAIL, AND01);
    SetNetworkconnectedEventFlag(1659, OFF);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1655, 1656);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1659);
});

Event(20006128, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1920, 1934);
    BatchSetNetworkconnectedEventFlags(1920, 1934, OFF);
    SetNetworkconnectedEventFlag(1920, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1935, 1936);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1939);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 70002080, 70002084);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 71100886);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, 71100859);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, 8301);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, 9303);
    IfEventFlag(AND02, ON, TargetEventFlagType.EventFlag, 1920);
    IfConditionGroup(AND02, PASS, OR01);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND02);
    BatchSetNetworkconnectedEventFlags(1920, 1934, OFF);
    SetNetworkconnectedEventFlag(1921, ON);
});

Event(20006129, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1800, 1819);
    BatchSetNetworkconnectedEventFlags(1800, 1819, OFF);
    SetNetworkconnectedEventFlag(1800, ON);
});

Event(20006130, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1820, 1834);
    BatchSetNetworkconnectedEventFlags(1820, 1834, OFF);
    SetNetworkconnectedEventFlag(1820, ON);
});

Event(20006131, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1840, 1854);
    BatchSetNetworkconnectedEventFlags(1840, 1854, OFF);
    SetNetworkconnectedEventFlag(1840, ON);
});

Event(20006132, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1860, 1874);
    BatchSetNetworkconnectedEventFlags(1860, 1874, OFF);
    SetNetworkconnectedEventFlag(1860, ON);
});

Event(20006133, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1880, 1894);
    BatchSetNetworkconnectedEventFlags(1880, 1894, OFF);
    SetNetworkconnectedEventFlag(1880, ON);
});

Event(20006134, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1900, 1914);
    BatchSetNetworkconnectedEventFlags(1900, 1914, OFF);
    SetNetworkconnectedEventFlag(1900, ON);
});

Event(20006135, Restart, function() {
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1780, 1794);
    BatchSetNetworkconnectedEventFlags(1780, 1794, OFF);
    SetNetworkconnectedEventFlag(1780, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1795, 1796);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1799);
});

Event(20006136, Restart, function() {
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1760, 1774);
    BatchSetNetworkconnectedEventFlags(1760, 1774, OFF);
    SetNetworkconnectedEventFlag(1760, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1775, 1776);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1779);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 1760);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, 12500601);
    SkipIfConditionGroupStateUncompiled(2, FAIL, AND01);
    BatchSetNetworkconnectedEventFlags(1760, 1774, OFF);
    SetNetworkconnectedEventFlag(1761, ON);
});

Event(20006137, Restart, function() {
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1740, 1754);
    BatchSetNetworkconnectedEventFlags(1740, 1754, OFF);
    SetNetworkconnectedEventFlag(1740, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1755, 1756);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1759);
});

Event(20006138, Restart, function() {
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1780, 1794);
    BatchSetNetworkconnectedEventFlags(1780, 1794, OFF);
    SetNetworkconnectedEventFlag(1780, ON);
    EndIfBatchEventFlags(EventEndType.End, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1795, 1796);
    EndIfEventFlag(EventEndType.End, ON, TargetEventFlagType.EventFlag, 1799);
});

Event(20006139, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1940, 1949);
    BatchSetNetworkconnectedEventFlags(1940, 1949, OFF);
    SetNetworkconnectedEventFlag(1940, ON);
});

Event(20006140, Restart, function() {
    EndIfPlayerIsNotInOwnWorldExcludesArena(EventEndType.End, true);
    SkipIfBatchEventFlags(2, LogicalOperationType.NotAllOFF, TargetEventFlagType.EventFlag, 1790, 1794);
    BatchSetNetworkconnectedEventFlags(1790, 1794, OFF);
    SetNetworkconnectedEventFlag(1790, ON);
});

Event(20006200, Default, function(X0_4, X4_4, X8_4) {
    IfCharacterHasSpEffect(AND02, 10000, 108900, false, ComparisonType.Equal, 1);
    IfInoutsideArea(AND02, InsideOutsideState.Inside, 10000, X4_4, 1);
    IfCharacterHasSpEffect(AND03, 10000, 108900, true, ComparisonType.Equal, 1);
    IfInoutsideArea(AND03, InsideOutsideState.Inside, 10000, X8_4, 1);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(OR01, PASS, AND03);
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X0_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, 70001049);
    IfConditionGroup(AND01, PASS, OR01);
    IfConditionGroup(MAIN, PASS, AND01);
    SetSpEffect(10000, 108900);
    WaitFixedTimeSeconds(0.1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006201, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4) {
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventIDSlotNumber, 0);
    SetCharacterGravity(X0_4, Disabled);
    SetCharacterMaphit(X0_4, true);
    SetCharacterInvincibility(X0_4, Enabled);
    SetCharacterAnimationState(X0_4, Disabled);
    SetCharacterImmortality(X0_4, Enabled);
    SetCharacterGravity(X4_4, Disabled);
    SetCharacterMaphit(X4_4, true);
    SetCharacterInvincibility(X4_4, Enabled);
    SetCharacterAnimationState(X4_4, Disabled);
    SetCharacterImmortality(X4_4, Enabled);
    Label0();
    SetSpEffect(X0_4, 31100);
    SetSpEffect(X4_4, 31100);
    IfPlayerIsLookingAtEntity(AND01, true, X0_4, X0_4, 30, 30);
    IfEntityInoutsideRadiusOfEntity(AND01, InsideOutsideState.Inside, 10000, X0_4, X8_4, 1);
    IfPlayerIsLookingAtEntity(AND02, false, X0_4, X0_4, 30, 30);
    IfPlayerIsLookingAtEntity(AND02, true, X0_4, X0_4, 90, 90);
    IfEntityInoutsideRadiusOfEntity(AND02, InsideOutsideState.Inside, 10000, X0_4, X12_4, 1);
    IfPlayerIsLookingAtEntity(AND03, false, X0_4, X0_4, 90, 90);
    IfEntityInoutsideRadiusOfEntity(AND03, InsideOutsideState.Inside, 10000, X0_4, X16_4, 1);
    IfConditionGroup(OR01, PASS, AND01);
    IfConditionGroup(OR01, PASS, AND02);
    IfConditionGroup(OR01, PASS, AND03);
    IfConditionGroup(MAIN, PASS, OR01);
    ClearSpEffect(X0_4, 31100);
    ClearSpEffect(X4_4, 31100);
    IfEntityInoutsideRadiusOfEntity(MAIN, InsideOutsideState.Outside, 10000, X0_4, 30, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006202, Restart, function(X0_4, X4_4, X8_4) {
    ForceAnimationPlayback(X0_4, X8_4, false, false, false, 0, 1);
    IfEntityInoutsideRadiusOfEntity(MAIN, InsideOutsideState.Inside, 10000, X0_4, X4_4, 1);
    SetSpEffect(X0_4, 31100);
    WaitFixedTimeSeconds(1);
    SetCharacterBackreadState(X0_4, true);
});

Event(20006203, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4, X24_4) {
    IfEventFlag(AND01, ON, TargetEventFlagType.EventFlag, X16_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X20_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X24_4);
    IfCharacterHasSpEffect(AND01, 10000, 30700, false, ComparisonType.Equal, 1);
    IfConditionGroup(MAIN, PASS, AND01);
    GotoIfEventFlag(Label.LABEL1, ON, TargetEventFlagType.EventFlag, X8_4);
    GotoIfEventFlag(Label.LABEL0, ON, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(OR02, OFF, TargetEventFlagType.EventFlag, X16_4);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, X20_4);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, X24_4);
    IfCharacterHasSpEffect(OR02, 10000, 30700, true, ComparisonType.Equal, 1);
    IfEventFlag(OR02, ON, TargetEventFlagType.EventFlag, X8_4);
    IfConditionGroup(OR01, PASS, OR02);
    IfEventFlag(OR01, ON, TargetEventFlagType.EventFlag, X4_4);
    IfConditionGroup(MAIN, PASS, OR01);
    EndIfConditionGroupStateCompiled(EventEndType.Restart, PASS, OR02);
    SetEventFlag(X0_4, ON);
    EndUnconditionally(EventEndType.Restart);
    Label0();
    IfEventFlag(OR04, OFF, TargetEventFlagType.EventFlag, X16_4);
    IfEventFlag(OR04, ON, TargetEventFlagType.EventFlag, X20_4);
    IfEventFlag(OR04, ON, TargetEventFlagType.EventFlag, X24_4);
    IfCharacterHasSpEffect(OR04, 10000, 30700, true, ComparisonType.Equal, 1);
    IfEventFlag(OR04, OFF, TargetEventFlagType.EventFlag, X4_4);
    IfEventFlag(OR04, ON, TargetEventFlagType.EventFlag, X8_4);
    IfConditionGroup(OR03, PASS, OR04);
    IfElapsedSeconds(OR03, X12_4);
    IfConditionGroup(MAIN, PASS, OR03);
    EndIfConditionGroupStateCompiled(EventEndType.Restart, PASS, OR04);
    SetEventFlag(X0_4, ON);
    EndUnconditionally(EventEndType.Restart);
    Label1();
    IfEventFlag(OR05, OFF, TargetEventFlagType.EventFlag, X16_4);
    IfEventFlag(OR05, ON, TargetEventFlagType.EventFlag, X20_4);
    IfEventFlag(OR05, ON, TargetEventFlagType.EventFlag, X24_4);
    IfCharacterHasSpEffect(OR05, 10000, 30700, true, ComparisonType.Equal, 1);
    IfEventFlag(OR05, OFF, TargetEventFlagType.EventFlag, X8_4);
    IfConditionGroup(MAIN, PASS, OR05);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006204, Restart, function(X0_4, X4_4, X8_4, X12_4) {
    SetEventFlag(X0_4, OFF);
    IfEntityInoutsideRadiusOfEntity(MAIN, InsideOutsideState.Inside, 10000, X4_4, X8_4, 1);
    SetEventFlag(X0_4, ON);
    IfEntityInoutsideRadiusOfEntity(MAIN, InsideOutsideState.Outside, 10000, X4_4, X12_4, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006205, Restart, function(X0_4, X4_4, X8_4) {
    SetEventFlag(X0_4, OFF);
    IfInoutsideArea(MAIN, InsideOutsideState.Inside, 10000, X4_4, 1);
    SetEventFlag(X0_4, ON);
    IfInoutsideArea(MAIN, InsideOutsideState.Outside, 10000, X8_4, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006206, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X12_4);
    IfConditionGroup(MAIN, PASS, AND01);
    IfParameterComparison(AND02, ComparisonType.Equal, X16_4, 0);
    IfParameterComparison(AND02, ComparisonType.Equal, X20_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND02);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, X16_4);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, X20_4);
    EndIfConditionGroupStateUncompiled(EventEndType.Restart, FAIL, AND03);
    Label0();
    ResetCharacterPosition(X0_4);
    ForceAnimationPlayback(X0_4, X4_4, false, false, false, 0, 1);
    EndUnconditionally(EventEndType.Restart);
});

Event(20006207, Restart, function(X0_4, X4_4, X8_4, X12_4, X16_4, X20_4) {
    IfEventFlag(MAIN, ON, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X8_4);
    IfEventFlag(AND01, OFF, TargetEventFlagType.EventFlag, X12_4);
    IfConditionGroup(MAIN, PASS, AND01);
    IfParameterComparison(AND02, ComparisonType.Equal, X16_4, 0);
    IfParameterComparison(AND02, ComparisonType.Equal, X20_4, 0);
    GotoIfConditionGroupStateUncompiled(Label.LABEL0, PASS, AND02);
    SkipIfComparison(1, ComparisonType.Equal, X16_4, 0);
    IfEventFlag(AND03, ON, TargetEventFlagType.EventFlag, X16_4);
    SkipIfComparison(1, ComparisonType.Equal, X20_4, 0);
    IfEventFlag(AND03, OFF, TargetEventFlagType.EventFlag, X20_4);
    EndIfConditionGroupStateUncompiled(EventEndType.Restart, FAIL, AND03);
    Label0();
    ChangeCharacterEnableState(X4_4, Disabled);
    SetCharacterBackreadState(X4_4, true);
    ChangeCharacterEnableState(X0_4, Enabled);
    SetCharacterBackreadState(X0_4, false);
    EndUnconditionally(EventEndType.Restart);
});

Event(20202020, Restart, function (X0_4, X4_4, X8_4) {
    GotoIfEventFlag(Label.LABEL0, OFF, TargetEventFlagType.EventFlag, X4_4);
    ForceCharacterDeath(X0_4, false);
    ChangeCharacterEnableState(X0_4, Disabled);
    EndUnconditionally(EventEndType.End);
    Label0();
    IfNumberOfCharacterHealthBars(MAIN, X0_4, ComparisonType.Equal, 0, ComparisonType.Equal, 1);
    IfCharacterDeadalive(MAIN, X0_4, DeathState.Dead, ComparisonType.Equal, 1);
    AwardItemLot(X8_4);
    SetEventFlag(X4_4, ON);
});
